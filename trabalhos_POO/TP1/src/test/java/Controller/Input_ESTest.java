/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 00:40:48 GMT 2024
 */

package Controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Controller.Input;
import View.Apresentacao;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Input_ESTest extends Input_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("-");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      int int0 = input0.lerInt(apresentacao0, "| =:3=)", (-1707), 2);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("-");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      double double0 = input0.lerDouble(apresentacao0, "", (-1), (-1));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("-");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      double double0 = input0.lerDouble(apresentacao0, "-", (-1), 6);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("0");
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "$S", 0, (-1740));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("8");
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, " Q(PL7^>", 1131, 1131);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("0");
      Apresentacao apresentacao0 = new Apresentacao();
      String string0 = input0.lerString(apresentacao0, "U| =:3=)");
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("");
      String string0 = input0.lerString(apresentacao0, "i,CVH? b~l");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("mfJqyFjU");
      input0.lerFloat(apresentacao0, ".1M]UT*+s-NCIFE", (-1606.2279F), (-3450.0696F));
      // Undeclared exception!
      try { 
        input0.lerString(apresentacao0, ".1M]UT*+s-NCIFE");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerSN((Apresentacao) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerInt((Apresentacao) null, "mRxw$'g+cL\"D/s:/<e", (-81), (-81));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerFloat(apresentacao0, ".1M]UT*+s-NCIFE", (-1606.2279F), (-3450.0696F));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerFloat((Apresentacao) null, "+------------------------------+", 0.0F, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerDouble((Apresentacao) null, "", 0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, "");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerData((Apresentacao) null, "Vender Sapatilha");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("&?UtcEFIQkaXc");
      // Undeclared exception!
      try { 
        input0.lerData(apresentacao0, "&?UtcEFIQkaXc");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("Controller.Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("-");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      int int0 = input0.lerInt(apresentacao0, "-", (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("");
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerInt(apresentacao0, "", 222, 222);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("nmJULCbY2z<,");
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerDouble(apresentacao0, "nmJULCbY2z<,", (-1073741822), (-1073741822));
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Input input0 = new Input();
      SystemInUtil.addInputLine("P");
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        input0.lerSN(apresentacao0, "1oRXi#~EDK");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Input input0 = new Input();
      Apresentacao apresentacao0 = new Apresentacao();
      SystemInUtil.addInputLine("S");
      boolean boolean0 = input0.lerSN(apresentacao0, "(WL&Q2CP _(;|CX");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Input input0 = new Input();
      // Undeclared exception!
      try { 
        input0.lerString((Apresentacao) null, "Controller.Input");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controller.Input", e);
      }
  }
}
