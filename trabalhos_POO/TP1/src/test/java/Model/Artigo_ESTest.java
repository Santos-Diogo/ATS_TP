/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 00:39:16 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.Malas;
import Model.Sapatilhas;
import Model.TShirt;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = (Sapatilhas)sapatilhas0.clone();
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertFalse(sapatilhas1.getAtilhos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertNotNull(sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      
      sapatilhas1.setCorrecaoPreco(1.0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals(1.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertFalse(sapatilhas1.getAtilhos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals(1.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getMarca());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getCor());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertFalse(sapatilhas1.getAtilhos());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertFalse(boolean0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(1, sapatilhas1.getId());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertNotNull(sapatilhas1);
      
      sapatilhas1.setNumeroDonos(533);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(533, sapatilhas1.getNumeroDonos());
      assertEquals(1, sapatilhas1.getId());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getMarca());
      assertEquals("", sapatilhas1.getCor());
      assertEquals(533, sapatilhas1.getNumeroDonos());
      assertEquals(1, sapatilhas1.getId());
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertFalse(boolean0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertNotNull(sapatilhas0);
      
      Sapatilhas sapatilhas1 = new Sapatilhas();
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(2, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCor());
      assertNotNull(sapatilhas1);
      
      boolean boolean0 = sapatilhas1.equals(sapatilhas0);
      assertFalse(sapatilhas0.equals((Object)sapatilhas1));
      assertFalse(sapatilhas1.equals((Object)sapatilhas0));
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas1.getEstado());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(2, sapatilhas1.getId());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals("", sapatilhas1.getDescricao());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTransportadora());
      assertEquals("", sapatilhas1.getCodigo());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertEquals("", sapatilhas1.getCor());
      assertFalse(boolean0);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNotNull(malas0);
      
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(113L);
      assertNotNull(localDate0);
      
      Artigo.Estado artigo_Estado0 = malas0.getEstado();
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Sapatilhas sapatilhas0 = new Sapatilhas(3, true, "Bkk", localDate0, sapatilhas_Tipos_Sapatilhas0, "[@+:e_l/l", artigo_Estado0, (-2393), artigo_Avaliação0, "[@+:e_l/l", "", "", 1381.188, 3487.82, "");
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliação.IMPECÁVEL, sapatilhas0.getAvaliacao());
      assertEquals(1381.188, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals(3, sapatilhas0.getTamanhoNumerico());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("[@+:e_l/l", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(3487.82, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("[@+:e_l/l", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("Bkk", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertEquals((-2393), sapatilhas0.getNumeroDonos());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.toString(localDate0);
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getCodigo());
      assertEquals("", malas0.getMarca());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertNull(malas0.getEstado());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Avaliação.IMPECÁVEL, sapatilhas0.getAvaliacao());
      assertEquals(1381.188, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertTrue(sapatilhas0.getAtilhos());
      assertEquals(3, sapatilhas0.getTamanhoNumerico());
      assertEquals(2, sapatilhas0.getId());
      assertEquals("[@+:e_l/l", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(3487.82, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("[@+:e_l/l", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("Bkk", sapatilhas0.getCor());
      assertNull(sapatilhas0.getEstado());
      assertEquals((-2393), sapatilhas0.getNumeroDonos());
      assertNotNull(string0);
      assertEquals("ID: 2\nTipo: [@+:e_l/l\nEstado: null\nN\u00FAmero de Donos: -2393\nAvalia\u00E7\u00E3o: IMPEC\u00C1VEL\nDescri\u00E7\u00E3o: [@+:e_l/l\nMarca: \nC\u00F3digo: \nPre\u00E7o Base: 1381.188\nCorre\u00E7\u00E3o do Pre\u00E7o: 3487.82\nTransportadora: \nTamanho Numerico: 3\nAtilhos: true\nCor: Bkk\nData de Lancamento: 1970-04-24\nTipo de Sapatilhas: PREMIUM\nPreco Final: 1381.188\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertNotNull(tShirt0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-974L));
      assertNotNull(localDate0);
      
      double double0 = tShirt0.precoFinal(localDate0);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertNotNull(sapatilhas0);
      
      sapatilhas0.setPrecoBase(4236.902064);
      assertEquals(4236.902064, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      assertNotNull(zoneOffset0);
      
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      assertNotNull(localDate0);
      
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals(4236.902064, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(4236.902064, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(555, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-4386), artigo_Avaliação0, "", "", "", (-1335.23362792702), 0.0, "");
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertNotNull(sapatilhas0);
      
      double double0 = sapatilhas0.precoFinal(localDate0);
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals((-1335.23362792702), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "BOM", artigo_Estado0, 1665, artigo_Avaliação0, "", "BOM", (String) null, 1665, 0.0, "Model.Artigo$Avalia\u00E7\u00E3o");
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getCodigo());
      assertEquals(1665.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Model.Artigo$Avalia\u00E7\u00E3o", tShirt0.getTransportadora());
      assertEquals("BOM", tShirt0.getMarca());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("BOM", tShirt0.getTipo());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getTransportadora();
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getCodigo());
      assertEquals(1665.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(1, tShirt0.getId());
      assertEquals("Model.Artigo$Avalia\u00E7\u00E3o", tShirt0.getTransportadora());
      assertEquals("BOM", tShirt0.getMarca());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("BOM", tShirt0.getTipo());
      assertNotNull(string0);
      assertEquals("Model.Artigo$Avalia\u00E7\u00E3o", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, 2851, artigo_Avaliação0, "", "", (String) null, 2851, (-1573.975), "");
      assertEquals((-1573.975), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertEquals("", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(2851.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getTransportadora();
      assertEquals((-1573.975), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertEquals("", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals("", tShirt0.getMarca());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals(2851.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, (String) null, artigo_Estado0, (-799), artigo_Avaliação0, (String) null, (String) null, (String) null, (-812.11674974), (-799), "1H-\"IwHzRzwjs*");
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("1H-\"IwHzRzwjs*", tShirt0.getTransportadora());
      assertNull(tShirt0.getMarca());
      assertEquals((-799.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTipo());
      assertEquals((-812.11674974), tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getDescricao());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getTipo();
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(Artigo.Estado.NOVO, tShirt0.getEstado());
      assertEquals("1H-\"IwHzRzwjs*", tShirt0.getTransportadora());
      assertNull(tShirt0.getMarca());
      assertEquals((-799.0), tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTipo());
      assertEquals((-812.11674974), tShirt0.getPrecoBase(), 0.01);
      assertNull(tShirt0.getCodigo());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getDescricao());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getTipo();
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getCor());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals(1, sapatilhas0.getId());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertNotNull(sapatilhas0);
      
      sapatilhas0.setPrecoBase(4236.902064);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(4236.902064, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      
      double double0 = sapatilhas0.getPrecoBase();
      assertEquals(1, sapatilhas0.getId());
      assertEquals(4236.902064, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getTransportadora());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(4236.902064, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 21.2947F, "Descri\u00E7\u00E3o: ", (-29), "V9/w7MXZ", artigo_Estado0, (-29), artigo_Avaliação0, "Descri\u00E7\u00E3o: ", "Descri\u00E7\u00E3o: ", "fl;l>UNff=j;`7=", 1.0, 21.2947F, "G-(;)IR<Ft|Yo2ymG");
      assertEquals(21.2947F, malas0.getDim(), 0.01F);
      assertEquals("fl;l>UNff=j;`7=", malas0.getCodigo());
      assertEquals(21.294700622558594, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("V9/w7MXZ", malas0.getTipo());
      assertEquals("G-(;)IR<Ft|Yo2ymG", malas0.getTransportadora());
      assertEquals((-29), malas0.getAno_da_colecao());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getDescricao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals((-29), malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(1.0, malas0.getPrecoBase(), 0.01);
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMarca());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      malas0.setPrecoBase((-29));
      assertEquals(21.2947F, malas0.getDim(), 0.01F);
      assertEquals("fl;l>UNff=j;`7=", malas0.getCodigo());
      assertEquals(21.294700622558594, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("V9/w7MXZ", malas0.getTipo());
      assertEquals("G-(;)IR<Ft|Yo2ymG", malas0.getTransportadora());
      assertEquals((-29), malas0.getAno_da_colecao());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getDescricao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals((-29.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-29), malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMarca());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      
      double double0 = malas0.getPrecoBase();
      assertEquals(21.2947F, malas0.getDim(), 0.01F);
      assertEquals("fl;l>UNff=j;`7=", malas0.getCodigo());
      assertEquals(21.294700622558594, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("V9/w7MXZ", malas0.getTipo());
      assertEquals("G-(;)IR<Ft|Yo2ymG", malas0.getTransportadora());
      assertEquals((-29), malas0.getAno_da_colecao());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getDescricao());
      assertEquals(Malas.Tipos_Malas.NORMAL, malas0.getTipo_mala());
      assertEquals((-29.0), malas0.getPrecoBase(), 0.01);
      assertEquals((-29), malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMarca());
      assertEquals("Descri\u00E7\u00E3o: ", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals((-29.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(555, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-4386), artigo_Avaliação0, "", "", "", (-1335.23362792702), 0.0, "");
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getTipo());
      assertNotNull(sapatilhas0);
      
      sapatilhas0.setNumeroDonos(555);
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(555, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      
      int int0 = sapatilhas0.getNumeroDonos();
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(555, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals(555, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNotNull(malas0);
      
      malas0.setNumeroDonos((-1));
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals((-1), malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      
      int int0 = malas0.getNumeroDonos();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertNull(malas0.getTransportadora());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertEquals((-1), malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      Sapatilhas sapatilhas0 = new Sapatilhas((-910), false, (String) null, (LocalDate) null, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-910), artigo_Avaliação0, (String) null, (String) null, "", (-2426.8029901398327), 2144.345, "\n");
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getCor());
      assertEquals("\n", sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals((-910), sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals((-2426.8029901398327), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(2144.345, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getMarca();
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getCor());
      assertEquals("\n", sapatilhas0.getTransportadora());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals((-910), sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals((-2426.8029901398327), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(2144.345, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertNull(sapatilhas0.getAvaliacao());
      assertNull(sapatilhas0.getDescricao());
      assertNull(sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 0, "", artigo_Estado0, 0, artigo_Avaliação0, "Tamanho Numerico: ", "SATISFAT\u00D3RIO", "Tamanho Numerico: ", 0.0, 0.0, "");
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("Tamanho Numerico: ", malas0.getDescricao());
      assertEquals("Tamanho Numerico: ", malas0.getCodigo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals("SATISFAT\u00D3RIO", malas0.getMarca());
      assertEquals("", malas0.getTransportadora());
      assertNotNull(malas0);
      
      String string0 = malas0.getMarca();
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("Tamanho Numerico: ", malas0.getDescricao());
      assertEquals("Tamanho Numerico: ", malas0.getCodigo());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getAvaliacao());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals("SATISFAT\u00D3RIO", malas0.getMarca());
      assertEquals("", malas0.getTransportadora());
      assertNotNull(string0);
      assertEquals("SATISFAT\u00D3RIO", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.M;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, 0, artigo_Avaliação0, "", "I)Jh", "I)Jh", 0, 0, "I)Jh");
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(1, tShirt0.getId());
      assertEquals("I)Jh", tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("I)Jh", tShirt0.getCodigo());
      assertEquals("I)Jh", tShirt0.getMarca());
      assertNotNull(tShirt0);
      
      tShirt0.setId(0);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0, tShirt0.getId());
      assertEquals("I)Jh", tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("I)Jh", tShirt0.getCodigo());
      assertEquals("I)Jh", tShirt0.getMarca());
      
      int int0 = tShirt0.getId();
      assertEquals(0, tShirt0.getNumeroDonos());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("", tShirt0.getDescricao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(0, tShirt0.getId());
      assertEquals("I)Jh", tShirt0.getTransportadora());
      assertEquals(TShirt.Tamanho.M, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals("I)Jh", tShirt0.getCodigo());
      assertEquals("I)Jh", tShirt0.getMarca());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.S;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, 3011, artigo_Avaliação0, "ID: ", "", "}s:%JN@J", 1591.8039234092817, 0.0, "5D)&z$m");
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals("", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(Artigo.Avaliação.BOM, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("ID: ", tShirt0.getDescricao());
      assertEquals(3011, tShirt0.getNumeroDonos());
      assertEquals("}s:%JN@J", tShirt0.getCodigo());
      assertEquals("5D)&z$m", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getTipo());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1591.8039234092817, tShirt0.getPrecoBase(), 0.01);
      assertNotNull(tShirt0);
      
      Artigo.Estado artigo_Estado1 = tShirt0.getEstado();
      assertEquals(1, tShirt0.getId());
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals("", tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.S, tShirt0.getTamanho());
      assertEquals(Artigo.Avaliação.BOM, tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals("ID: ", tShirt0.getDescricao());
      assertEquals(3011, tShirt0.getNumeroDonos());
      assertEquals("}s:%JN@J", tShirt0.getCodigo());
      assertEquals("5D)&z$m", tShirt0.getTransportadora());
      assertEquals("", tShirt0.getTipo());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(1591.8039234092817, tShirt0.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, artigo_Estado1);
      assertSame(artigo_Estado0, artigo_Estado1);
      assertSame(artigo_Estado1, artigo_Estado0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.RISCAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, (String) null, artigo_Estado0, (-807), artigo_Avaliação0, (String) null, (String) null, (String) null, (-807), (-1478.642706633), "");
      assertNull(tShirt0.getCodigo());
      assertEquals("", tShirt0.getTransportadora());
      assertNull(tShirt0.getDescricao());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertNull(tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertNull(tShirt0.getTipo());
      assertEquals((-807.0), tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals((-807), tShirt0.getNumeroDonos());
      assertEquals((-1478.642706633), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getDescricao();
      assertNull(tShirt0.getCodigo());
      assertEquals("", tShirt0.getTransportadora());
      assertNull(tShirt0.getDescricao());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertNull(tShirt0.getMarca());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertNull(tShirt0.getTipo());
      assertEquals((-807.0), tShirt0.getPrecoBase(), 0.01);
      assertEquals(TShirt.Padrao.RISCAS, tShirt0.getPadrao());
      assertEquals((-807), tShirt0.getNumeroDonos());
      assertEquals((-1478.642706633), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(1, tShirt0.getId());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 0.0F, "", 0, "", artigo_Estado0, 0, artigo_Avaliação0, "Tamanho Numerico: ", "SATISFAT\u00D3RIO", "Tamanho Numerico: ", 0.0, 0.0, "");
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, malas0.getId());
      assertEquals("SATISFAT\u00D3RIO", malas0.getMarca());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("Tamanho Numerico: ", malas0.getDescricao());
      assertEquals("Tamanho Numerico: ", malas0.getCodigo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNotNull(malas0);
      
      String string0 = malas0.getDescricao();
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTransportadora());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, malas0.getId());
      assertEquals("SATISFAT\u00D3RIO", malas0.getMarca());
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("Tamanho Numerico: ", malas0.getDescricao());
      assertEquals("Tamanho Numerico: ", malas0.getCodigo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNotNull(string0);
      assertEquals("Tamanho Numerico: ", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      Malas malas0 = new Malas(malas_Tipos_Malas0, 1667.1914F, "@Xgs*|Iq'$Rntv", 0, "SO|_D7]]a(+", artigo_Estado0, 0, artigo_Avaliação0, "SO|_D7]]a(+", "SO|_D7]]a(+", "@Xgs*|Iq'$Rntv", 0, 1667.1914F, "SO|_D7]]a(+");
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("SO|_D7]]a(+", malas0.getDescricao());
      assertEquals(1667.1914F, malas0.getDim(), 0.01F);
      assertEquals("@Xgs*|Iq'$Rntv", malas0.getCodigo());
      assertEquals("SO|_D7]]a(+", malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1667.19140625, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("SO|_D7]]a(+", malas0.getMarca());
      assertEquals("SO|_D7]]a(+", malas0.getTipo());
      assertEquals("@Xgs*|Iq'$Rntv", malas0.getMaterial());
      assertNull(malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNotNull(malas0);
      
      double double0 = malas0.getCorrecaoPreco();
      assertEquals(Artigo.Estado.NOVO, malas0.getEstado());
      assertEquals(1, malas0.getId());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("SO|_D7]]a(+", malas0.getDescricao());
      assertEquals(1667.1914F, malas0.getDim(), 0.01F);
      assertEquals("@Xgs*|Iq'$Rntv", malas0.getCodigo());
      assertEquals("SO|_D7]]a(+", malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(1667.19140625, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("SO|_D7]]a(+", malas0.getMarca());
      assertEquals("SO|_D7]]a(+", malas0.getTipo());
      assertEquals("@Xgs*|Iq'$Rntv", malas0.getMaterial());
      assertNull(malas0.getAvaliacao());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(1667.19140625, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-689.0F), "=9J9mYxz%TomA>6+Qsa", (-355), (String) null, artigo_Estado0, 1726, artigo_Avaliação0, "=9J9mYxz%TomA>6+Qsa", "", "=9J9mYxz%TomA>6+Qsa", (-1624.362697853064), (-1624.362697853064), "=9J9mYxz%TomA>6+Qsa");
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getCodigo());
      assertEquals((-1624.362697853064), malas0.getPrecoBase(), 0.01);
      assertEquals(1726, malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, malas0.getAvaliacao());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getDescricao());
      assertEquals((-689.0F), malas0.getDim(), 0.01F);
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getTransportadora());
      assertEquals((-355), malas0.getAno_da_colecao());
      assertNull(malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals((-1624.362697853064), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      String string0 = malas0.getCodigo();
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getCodigo());
      assertEquals((-1624.362697853064), malas0.getPrecoBase(), 0.01);
      assertEquals(1726, malas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, malas0.getAvaliacao());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getDescricao());
      assertEquals((-689.0F), malas0.getDim(), 0.01F);
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getTransportadora());
      assertEquals((-355), malas0.getAno_da_colecao());
      assertNull(malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals((-1624.362697853064), malas0.getCorrecaoPreco(), 0.01);
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getMaterial());
      assertEquals(1, malas0.getId());
      assertNotNull(string0);
      assertEquals("=9J9mYxz%TomA>6+Qsa", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNotNull(malas0);
      
      String string0 = malas0.getCodigo();
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getAvaliacao());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTransportadora());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getNumeroDonos());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertNotNull(malas0);
      
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      malas0.setAvaliacao(artigo_Avaliação0);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(Artigo.Avaliação.BOM, malas0.getAvaliacao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      
      Artigo.Avaliação artigo_Avaliação1 = malas0.getAvaliacao();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(Artigo.Avaliação.BOM, malas0.getAvaliacao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getDescricao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals(Artigo.Avaliação.BOM, artigo_Avaliação1);
      assertSame(artigo_Avaliação1, artigo_Avaliação0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertNotNull(sapatilhas0);
      
      boolean boolean0 = sapatilhas0.equals(sapatilhas0);
      assertEquals("", sapatilhas0.getCor());
      assertEquals("", sapatilhas0.getTipo());
      assertFalse(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1, sapatilhas0.getId());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas0.getEstado());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      assertNull(sapatilhas0.getEstado());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertNotNull(sapatilhas0);
      
      sapatilhas0.setPrecoBase(1.0);
      assertNull(sapatilhas0.getEstado());
      assertEquals(1.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      
      Sapatilhas sapatilhas1 = (Sapatilhas)sapatilhas0.clone();
      assertNull(sapatilhas0.getEstado());
      assertEquals(1.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getTipo());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getMarca());
      assertNull(sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertNull(sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0, sapatilhas0.getTamanhoNumerico());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("", sapatilhas1.getCor());
      assertFalse(sapatilhas1.getAtilhos());
      assertEquals("", sapatilhas1.getTipo());
      assertEquals(0, sapatilhas1.getTamanhoNumerico());
      assertEquals(0.0, sapatilhas1.getCorrecaoPreco(), 0.01);
      assertNull(sapatilhas1.getEstado());
      assertEquals("", sapatilhas1.getDescricao());
      assertNull(sapatilhas1.getAvaliacao());
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(1.0, sapatilhas1.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals("", sapatilhas1.getCodigo());
      assertEquals("", sapatilhas1.getMarca());
      assertNull(sapatilhas1.getTiposSapatilhas());
      assertNull(sapatilhas1.getTransportadora());
      assertNotNull(sapatilhas1);
      assertNotSame(sapatilhas0, sapatilhas1);
      assertNotSame(sapatilhas1, sapatilhas0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.L;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.LISO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, "", artigo_Estado0, (-37), artigo_Avaliação0, "Ju'AX&YYs#JwV", "", "", (-37), (-444.8133668), "V9/w7MXZ");
      assertEquals("Ju'AX&YYs#JwV", tShirt0.getDescricao());
      assertEquals("V9/w7MXZ", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals((-37.0), tShirt0.getPrecoBase(), 0.01);
      assertEquals((-444.8133668), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals((-37), tShirt0.getNumeroDonos());
      assertEquals(1, tShirt0.getId());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertNotNull(tShirt0);
      
      TShirt tShirt1 = (TShirt)tShirt0.clone();
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertEquals("Ju'AX&YYs#JwV", tShirt0.getDescricao());
      assertEquals("V9/w7MXZ", tShirt0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertEquals(TShirt.Tamanho.L, tShirt0.getTamanho());
      assertEquals(TShirt.Padrao.LISO, tShirt0.getPadrao());
      assertEquals((-37.0), tShirt0.getPrecoBase(), 0.01);
      assertEquals((-444.8133668), tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals((-37), tShirt0.getNumeroDonos());
      assertEquals(1, tShirt0.getId());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(1, tShirt1.getId());
      assertEquals((-444.8133668), tShirt1.getCorrecaoPreco(), 0.01);
      assertEquals((-37), tShirt1.getNumeroDonos());
      assertEquals((-37.0), tShirt1.getPrecoBase(), 0.01);
      assertEquals(Artigo.Estado.USADO, tShirt1.getEstado());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, tShirt1.getAvaliacao());
      assertEquals("Ju'AX&YYs#JwV", tShirt1.getDescricao());
      assertEquals("V9/w7MXZ", tShirt1.getTransportadora());
      assertEquals(TShirt.Padrao.LISO, tShirt1.getPadrao());
      assertEquals(TShirt.Tamanho.L, tShirt1.getTamanho());
      assertEquals("", tShirt1.getTipo());
      assertEquals("", tShirt1.getMarca());
      assertEquals("", tShirt1.getCodigo());
      assertNotNull(tShirt1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNull(tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNotNull(tShirt0);
      
      tShirt0.setId((-37));
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals((-37), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      
      TShirt tShirt1 = (TShirt)tShirt0.clone();
      assertTrue(tShirt1.equals((Object)tShirt0));
      assertNull(tShirt0.getTamanho());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertEquals((-37), tShirt0.getId());
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getDescricao());
      assertNull(tShirt0.getAvaliacao());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTransportadora());
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt1.getEstado());
      assertEquals(0.0, tShirt1.getCorrecaoPreco(), 0.01);
      assertNull(tShirt1.getTransportadora());
      assertEquals("", tShirt1.getMarca());
      assertNull(tShirt1.getTamanho());
      assertEquals("", tShirt1.getCodigo());
      assertEquals((-37), tShirt1.getId());
      assertEquals("", tShirt1.getDescricao());
      assertNull(tShirt1.getAvaliacao());
      assertEquals(0.0, tShirt1.getPrecoBase(), 0.01);
      assertEquals("", tShirt1.getTipo());
      assertNull(tShirt1.getPadrao());
      assertEquals(0, tShirt1.getNumeroDonos());
      assertNotNull(tShirt1);
      assertNotSame(tShirt0, tShirt1);
      assertNotSame(tShirt1, tShirt0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-1906.35F), "yfFIA(AK^sfF", 2146976915, "yfFIA(AK^sfF", artigo_Estado0, 2146976915, artigo_Avaliação0, "USADO", ",ZYt0'XPN)", "D]$:+ocqr^#.c!OZB", (-1906.35F), 2146976915, "=9J9mYxz%TomA>6+Qsa");
      assertEquals("USADO", malas0.getDescricao());
      assertEquals("D]$:+ocqr^#.c!OZB", malas0.getCodigo());
      assertEquals(",ZYt0'XPN)", malas0.getMarca());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("yfFIA(AK^sfF", malas0.getMaterial());
      assertEquals(2146976915, malas0.getNumeroDonos());
      assertEquals("yfFIA(AK^sfF", malas0.getTipo());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(2146976915, malas0.getAno_da_colecao());
      assertEquals((-1906.3499755859375), malas0.getPrecoBase(), 0.01);
      assertEquals((-1906.35F), malas0.getDim(), 0.01F);
      assertEquals(1, malas0.getId());
      assertEquals(2.146976915E9, malas0.getCorrecaoPreco(), 0.01);
      assertNotNull(malas0);
      
      Malas malas1 = (Malas)malas0.clone();
      assertTrue(malas1.equals((Object)malas0));
      assertEquals("USADO", malas0.getDescricao());
      assertEquals("D]$:+ocqr^#.c!OZB", malas0.getCodigo());
      assertEquals(",ZYt0'XPN)", malas0.getMarca());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas0.getTransportadora());
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals("yfFIA(AK^sfF", malas0.getMaterial());
      assertEquals(2146976915, malas0.getNumeroDonos());
      assertEquals("yfFIA(AK^sfF", malas0.getTipo());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas0.getAvaliacao());
      assertEquals(2146976915, malas0.getAno_da_colecao());
      assertEquals((-1906.3499755859375), malas0.getPrecoBase(), 0.01);
      assertEquals((-1906.35F), malas0.getDim(), 0.01F);
      assertEquals(1, malas0.getId());
      assertEquals(2.146976915E9, malas0.getCorrecaoPreco(), 0.01);
      assertEquals((-1906.35F), malas1.getDim(), 0.01F);
      assertEquals(",ZYt0'XPN)", malas1.getMarca());
      assertEquals("D]$:+ocqr^#.c!OZB", malas1.getCodigo());
      assertEquals(1, malas1.getId());
      assertEquals("yfFIA(AK^sfF", malas1.getTipo());
      assertEquals((-1906.3499755859375), malas1.getPrecoBase(), 0.01);
      assertEquals(2.146976915E9, malas1.getCorrecaoPreco(), 0.01);
      assertEquals("=9J9mYxz%TomA>6+Qsa", malas1.getTransportadora());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, malas1.getAvaliacao());
      assertEquals(Artigo.Estado.USADO, malas1.getEstado());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas1.getTipo_mala());
      assertEquals(2146976915, malas1.getAno_da_colecao());
      assertEquals("USADO", malas1.getDescricao());
      assertEquals("yfFIA(AK^sfF", malas1.getMaterial());
      assertEquals(2146976915, malas1.getNumeroDonos());
      assertNotNull(malas1);
      assertNotSame(malas0, malas1);
      assertNotSame(malas1, malas0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Malas.Tipos_Malas malas_Tipos_Malas0 = Malas.Tipos_Malas.PREMIUM;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Malas malas0 = new Malas(malas_Tipos_Malas0, (-2528.4246F), "", (-4359), "", artigo_Estado0, (-4359), artigo_Avaliação0, "", "Y_%2m8oD2a(ORJ!I}px", "nX]'i3M[frnU1N", (-3488.3548254), 3011.06758516793, "nX]'i3M[frnU1N");
      assertEquals("", malas0.getTipo());
      assertEquals("Y_%2m8oD2a(ORJ!I}px", malas0.getMarca());
      assertEquals((-2528.4246F), malas0.getDim(), 0.01F);
      assertEquals((-4359), malas0.getNumeroDonos());
      assertEquals((-4359), malas0.getAno_da_colecao());
      assertEquals("", malas0.getMaterial());
      assertEquals((-3488.3548254), malas0.getPrecoBase(), 0.01);
      assertEquals(3011.06758516793, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(Artigo.Estado.USADO, malas0.getEstado());
      assertEquals(Malas.Tipos_Malas.PREMIUM, malas0.getTipo_mala());
      assertEquals("", malas0.getDescricao());
      assertEquals(Artigo.Avaliação.BOM, malas0.getAvaliacao());
      assertEquals("nX]'i3M[frnU1N", malas0.getTransportadora());
      assertEquals("nX]'i3M[frnU1N", malas0.getCodigo());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      // Undeclared exception!
      try { 
        malas0.toString((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMaterial());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getCodigo());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertNull(malas0.getEstado());
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals("", malas0.getTipo());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      // Undeclared exception!
      try { 
        malas0.precoFinal((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Malas", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getTransportadora();
      assertEquals(1, tShirt0.getId());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getEstado());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertEquals("", tShirt0.getMarca());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getTipo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNotNull(malas0);
      
      double double0 = malas0.getPrecoBase();
      assertEquals("", malas0.getMarca());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertNotNull(malas0);
      
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(113L);
      assertNotNull(localDate0);
      
      Artigo.Estado artigo_Estado0 = malas0.getEstado();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.PREMIUM;
      Sapatilhas sapatilhas0 = new Sapatilhas(3, true, "Bkk", localDate0, sapatilhas_Tipos_Sapatilhas0, "[@+:e_l/l", artigo_Estado0, (-2393), artigo_Avaliação0, "[@+:e_l/l", "", "", 1381.188, 3487.82, "");
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertEquals("[@+:e_l/l", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1381.188, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals((-2393), sapatilhas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, sapatilhas0.getAvaliacao());
      assertTrue(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(3, sapatilhas0.getTamanhoNumerico());
      assertEquals("[@+:e_l/l", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(3487.82, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("Bkk", sapatilhas0.getCor());
      assertNotNull(sapatilhas0);
      
      String string0 = sapatilhas0.getTipo();
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getTipo_mala());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertEquals(0, malas0.getAno_da_colecao());
      assertNull(malas0.getEstado());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getTransportadora());
      assertEquals(1, malas0.getId());
      assertEquals("[@+:e_l/l", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals(1381.188, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.PREMIUM, sapatilhas0.getTiposSapatilhas());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals((-2393), sapatilhas0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.IMPECÁVEL, sapatilhas0.getAvaliacao());
      assertTrue(sapatilhas0.getAtilhos());
      assertNull(sapatilhas0.getEstado());
      assertEquals(3, sapatilhas0.getTamanhoNumerico());
      assertEquals("[@+:e_l/l", sapatilhas0.getDescricao());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals(2, sapatilhas0.getId());
      assertEquals(3487.82, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("Bkk", sapatilhas0.getCor());
      assertNotNull(string0);
      assertEquals("[@+:e_l/l", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getEstado());
      assertNotNull(tShirt0);
      
      int int0 = tShirt0.getId();
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getEstado());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTransportadora());
      assertNotNull(malas0);
      
      malas0.getAvaliacao();
      assertEquals("", malas0.getMaterial());
      assertEquals("", malas0.getDescricao());
      assertNull(malas0.getAvaliacao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getEstado());
      assertNull(malas0.getTipo_mala());
      assertEquals("", malas0.getTipo());
      assertEquals("", malas0.getMarca());
      assertEquals("", malas0.getCodigo());
      assertEquals(1, malas0.getId());
      assertNull(malas0.getTransportadora());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Malas malas0 = new Malas();
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getEstado());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNotNull(malas0);
      
      String string0 = malas0.getDescricao();
      assertEquals("", malas0.getCodigo());
      assertNull(malas0.getEstado());
      assertNull(malas0.getTipo_mala());
      assertEquals(0, malas0.getNumeroDonos());
      assertEquals(0.0, malas0.getCorrecaoPreco(), 0.01);
      assertNull(malas0.getTransportadora());
      assertEquals("", malas0.getMaterial());
      assertEquals(0.0F, malas0.getDim(), 0.01F);
      assertEquals(0, malas0.getAno_da_colecao());
      assertEquals(1, malas0.getId());
      assertEquals("", malas0.getMarca());
      assertNull(malas0.getAvaliacao());
      assertEquals("", malas0.getDescricao());
      assertEquals(0.0, malas0.getPrecoBase(), 0.01);
      assertEquals("", malas0.getTipo());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.NOVO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.IMPECÁVEL;
      Sapatilhas sapatilhas0 = new Sapatilhas(555, false, "", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, (-4386), artigo_Avaliação0, "", "", "", (-1335.23362792702), 0.0, "");
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertNotNull(sapatilhas0);
      
      int int0 = sapatilhas0.getNumeroDonos();
      assertEquals((-1335.23362792702), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(Artigo.Estado.NOVO, sapatilhas0.getEstado());
      assertEquals(0, sapatilhas0.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(Sapatilhas.Tipos_Sapatilhas.NORMAL, sapatilhas0.getTiposSapatilhas());
      assertFalse(sapatilhas0.getAtilhos());
      assertEquals("", sapatilhas0.getTipo());
      assertEquals("", sapatilhas0.getDescricao());
      assertEquals(555, sapatilhas0.getTamanhoNumerico());
      assertNull(sapatilhas0.getAvaliacao());
      assertEquals("", sapatilhas0.getTransportadora());
      assertEquals("", sapatilhas0.getCodigo());
      assertEquals("", sapatilhas0.getMarca());
      assertEquals("", sapatilhas0.getCor());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertNotNull(tShirt0);
      
      double double0 = tShirt0.getCorrecaoPreco();
      assertNull(tShirt0.getPadrao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getAvaliacao());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals("", tShirt0.getTipo());
      assertEquals(1, tShirt0.getId());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TShirt.Tamanho tShirt_Tamanho0 = TShirt.Tamanho.XL;
      TShirt.Padrao tShirt_Padrao0 = TShirt.Padrao.PALMEIRAS;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.SATISFATÓRIO;
      TShirt tShirt0 = new TShirt(tShirt_Tamanho0, tShirt_Padrao0, (String) null, artigo_Estado0, 45, artigo_Avaliação0, "~^P?r/28j-Qr", "~^P?r/28j-Qr", (String) null, 45, 45, (String) null);
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(45.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTipo());
      assertEquals(45, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("~^P?r/28j-Qr", tShirt0.getDescricao());
      assertEquals(45.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("~^P?r/28j-Qr", tShirt0.getMarca());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getCodigo();
      assertNull(tShirt0.getTransportadora());
      assertEquals(TShirt.Padrao.PALMEIRAS, tShirt0.getPadrao());
      assertNull(tShirt0.getCodigo());
      assertEquals(TShirt.Tamanho.XL, tShirt0.getTamanho());
      assertEquals(1, tShirt0.getId());
      assertEquals(45.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getTipo());
      assertEquals(45, tShirt0.getNumeroDonos());
      assertEquals(Artigo.Avaliação.SATISFATÓRIO, tShirt0.getAvaliacao());
      assertEquals("~^P?r/28j-Qr", tShirt0.getDescricao());
      assertEquals(45.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("~^P?r/28j-Qr", tShirt0.getMarca());
      assertEquals(Artigo.Estado.USADO, tShirt0.getEstado());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNotNull(tShirt0);
      
      String string0 = tShirt0.getMarca();
      assertEquals("", tShirt0.getTipo());
      assertEquals(0.0, tShirt0.getPrecoBase(), 0.01);
      assertEquals("", tShirt0.getMarca());
      assertEquals(1, tShirt0.getId());
      assertEquals("", tShirt0.getCodigo());
      assertNull(tShirt0.getTransportadora());
      assertEquals("", tShirt0.getDescricao());
      assertEquals(0, tShirt0.getNumeroDonos());
      assertNull(tShirt0.getAvaliacao());
      assertEquals(0.0, tShirt0.getCorrecaoPreco(), 0.01);
      assertNull(tShirt0.getPadrao());
      assertNull(tShirt0.getTamanho());
      assertNull(tShirt0.getEstado());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(488L);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-937), true, "Jt>5tCET4", localDate0, sapatilhas_Tipos_Sapatilhas0, "", artigo_Estado0, 1, artigo_Avaliação0, "", "Jt>5tCET4", "Jt>5tCET4", (-1.0), 4234.702438670407, "Jt>5tCET4");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals((-1.0), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals("", sapatilhas1.getTipo());
      assertEquals("", sapatilhas1.getDescricao());
      assertTrue(boolean0);
      assertEquals(1, sapatilhas0.getNumeroDonos());
      assertEquals(4234.702438670407, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals("Jt>5tCET4", sapatilhas1.getTransportadora());
      assertEquals("Jt>5tCET4", sapatilhas1.getCodigo());
      assertEquals("Jt>5tCET4", sapatilhas1.getMarca());
      assertEquals(1, sapatilhas0.getId());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(488L);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-937), true, "Jt>5tCET4", localDate0, sapatilhas_Tipos_Sapatilhas0, "M(om. <K#S>ILM", artigo_Estado0, 1, artigo_Avaliação0, "M(om. <K#S>ILM", "Jt>5tCET4", "Jt>5tCET4", (-1.0), 1696.2775894414, "Jt>5tCET4");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertEquals("Jt>5tCET4", sapatilhas1.getTransportadora());
      
      sapatilhas1.setTransportadora("8CxdT.$X#_v3");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      
      sapatilhas0.setCorrecaoPreco(1.0);
      sapatilhas1.equals(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(488L);
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-937), true, "Jt>5tCET4", localDate0, sapatilhas_Tipos_Sapatilhas0, "M(om. <K#S>ILM", artigo_Estado0, 1, artigo_Avaliação0, "M(om. <K#S>ILM", "Jt>5tCET4", "Jt>5tCET4", (-1.0), 1696.2775894414, "Jt>5tCET4");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.setPrecoBase(3.2734374586083974);
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertEquals(3.2734374586083974, sapatilhas0.getPrecoBase(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas0.setMarca("USADO");
      sapatilhas0.equals(sapatilhas1);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, sapatilhas0.getId());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setNumeroDonos(2);
      sapatilhas0.equals(sapatilhas1);
      assertEquals(2, sapatilhas1.getNumeroDonos());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      sapatilhas0.setEstado(artigo_Estado0);
      sapatilhas0.equals(sapatilhas1);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setTipo("L");
      sapatilhas1.equals(sapatilhas0);
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, sapatilhas0.getId());
      assertEquals(1, sapatilhas1.getId());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Artigo artigo0 = sapatilhas0.clone();
      artigo0.setId((-1982292595));
      artigo0.equals(sapatilhas0);
      assertEquals((-1982292595), artigo0.getId());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Artigo artigo0 = sapatilhas0.clone();
      // Undeclared exception!
      try { 
        artigo0.equals(sapatilhas0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Sapatilhas sapatilhas0 = new Sapatilhas();
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      sapatilhas1.setCodigo("yKlG84\"5,KLfm");
      sapatilhas1.equals(sapatilhas0);
      assertEquals(1, sapatilhas1.getId());
      assertEquals(0.0, sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(0, sapatilhas1.getNumeroDonos());
      assertEquals(1, sapatilhas0.getId());
      assertEquals(0.0, sapatilhas0.getCorrecaoPreco(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TShirt tShirt0 = new TShirt();
      tShirt0.setId((-398));
      int int0 = tShirt0.getId();
      assertEquals((-398), int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-937), false, "Jt>5tCET4", localDate0, sapatilhas_Tipos_Sapatilhas0, "Jt>5tCET4", artigo_Estado0, 1, artigo_Avaliação0, "Jt>5tCET4", "Jt>5tCET4", "Jt>5tCET4", (-1.0), (-1.0), "Jt>5tCET4");
      sapatilhas0.setDescricao("\n");
      assertEquals((-1.0), sapatilhas0.getPrecoBase(), 0.01);
      assertEquals(1, sapatilhas0.getNumeroDonos());
      assertEquals((-1.0), sapatilhas0.getCorrecaoPreco(), 0.01);
      assertEquals(1, sapatilhas0.getId());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Sapatilhas.Tipos_Sapatilhas sapatilhas_Tipos_Sapatilhas0 = Sapatilhas.Tipos_Sapatilhas.NORMAL;
      Artigo.Estado artigo_Estado0 = Artigo.Estado.USADO;
      Artigo.Avaliação artigo_Avaliação0 = Artigo.Avaliação.BOM;
      Sapatilhas sapatilhas0 = new Sapatilhas((-937), false, "Jt>5tCET4", localDate0, sapatilhas_Tipos_Sapatilhas0, "Jt>5tCET4", artigo_Estado0, 1, artigo_Avaliação0, "Jt>5tCET4", "Jt>5tCET4", "Jt>5tCET4", (-1.0), (-1.0), "Jt>5tCET4");
      Sapatilhas sapatilhas1 = new Sapatilhas(sapatilhas0);
      assertTrue(sapatilhas1.equals((Object)sapatilhas0));
      
      sapatilhas1.setDescricao("\n");
      boolean boolean0 = sapatilhas0.equals(sapatilhas1);
      assertFalse(boolean0);
  }
}
