/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 00:39:18 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Transportadoras;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Transportadoras_ESTest extends Transportadoras_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("%NN", 1420.7572, (-1576.4185938982), false, 1420.7572);
      Double double0 = new Double((-1257.7504716));
      Double double1 = new Double((-1576.4185938982));
      transportadoras0.altera(double0, double1, 3286);
      assertEquals((-1257.7504716), transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(21L);
      Double double0 = new Double((-1.0));
      transportadoras0.altera(double0, double0, 4);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(4, transportadoras0.getFormula());
      assertEquals(50.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("9kOADz~(J^", 3327.7143569736, 0.0, false, 0.0);
      Long long0 = Long.valueOf(5L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, double0, 0.01);
      assertEquals(3327.7143569736, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("$7yyB*sUrI-rz", (-108.70333369995), 2696.393799, true, (-639.3222));
      transportadoras0.setFormula((-756));
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setFormula((-1));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals((-1), transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      
      transportadoras0.setLucro((-1));
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, 0);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 566.345227283873, 566.345227283873, false, 566.345227283873);
      transportadoras0.addVolFaturacao(566.345227283873);
      assertEquals(1132.690454567746, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      assertTrue(transportadoras0.isPremium());
      
      transportadoras0.setPremium(false);
      boolean boolean0 = transportadoras0.isPremium();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 373.25576054047616, (-406.82352367366815), true, (-406.82352367366815));
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(373.25576054047616, transportadoras0.getImposto(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals((-406.82352367366815), double0, 0.01);
      assertEquals((-406.82352367366815), transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 0.0, 2261.4, false, 2261.4);
      transportadoras0.getNome();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(2261.4, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(2261.4, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      transportadoras0.getNome();
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      double double0 = transportadoras0.getLucro();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras(">`6=|-7<y$gyFj", 1114.481, 1114.481, true, 1114.481);
      double double0 = transportadoras0.getLucro();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(1114.481, double0, 0.01);
      assertEquals(1114.481, transportadoras0.getImposto(), 0.01);
      assertTrue(transportadoras0.isPremium());
      assertEquals(1114.481, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, 0);
      double double1 = transportadoras0.getImposto();
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("9kOADz~(J^", 3327.7143569736, 0.0, false, 0.0);
      double double0 = transportadoras0.getImposto();
      assertEquals(3327.7143569736, double0, 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      
      Double double0 = new Double(0.9);
      transportadoras0.altera(double0, double0, 0);
      int int0 = transportadoras0.getFormula();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula((-1));
      int int0 = transportadoras0.getFormula();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("%NN", 1420.7572, (-1575.3616920463214), false, 1420.7572);
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertEquals(1420.7572, transportadoras1.getVolFaturacao(), 0.01);
      
      transportadoras1.setVolFaturacao(0.0);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, 0);
      transportadoras0.clone();
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("$7yyB*sUrI-rz", (-108.70333369995), 2696.393799, true, (-639.3222));
      transportadoras0.setFormula((-756));
      transportadoras0.clone();
      assertEquals((-756), transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("4]G`8i\"", (-208.799), (-1852.106911316074), true, (-1852.106911316074));
      transportadoras0.setImposto(841.0);
      Long long0 = new Long(4L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(841.0, transportadoras0.getImposto(), 0.01);
      assertEquals((-4.210579852185962E7), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 493.4, 493.4, false, 4325.055758577603);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      // Undeclared exception!
      try { 
        transportadoras1.equals(transportadoras0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      // Undeclared exception!
      try { 
        transportadoras0.calculaPrecoExpedicao((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.9, 5.0, true, (-610.105));
      // Undeclared exception!
      try { 
        transportadoras0.altera((Double) null, (Double) null, (-1130));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadoras transportadoras0 = null;
      try {
        transportadoras0 = new Transportadoras((Transportadoras) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      boolean boolean0 = transportadoras0.isPremium();
      assertTrue(boolean0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("e}yGyM_b/X,", (-1068.76322), (-1068.76322), false, 5659.920947054);
      double double0 = transportadoras0.getLucro();
      assertEquals((-1068.76322), double0, 0.01);
      assertEquals(5659.920947054, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1068.76322), transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("e}yGyM_b/X,", (-1068.76322), (-1068.76322), false, 5659.920947054);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1068.76322), transportadoras0.getLucro(), 0.01);
      assertEquals((-1068.76322), transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(5659.920947054, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("9kOADz~(J^", 3327.7143569736, 0.0, false, 0.0);
      transportadoras0.getNome();
      assertEquals(3327.7143569736, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("8qa", (-4780.30206832), 0.0, true, (-4780.30206832));
      double double0 = transportadoras0.getImposto();
      assertEquals((-4780.30206832), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals((-4780.30206832), double0, 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      int int0 = transportadoras0.getFormula();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, int0);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long((-1L));
      Double double0 = new Double((-1.0));
      transportadoras0.altera(double0, double0, 4);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(4, transportadoras0.getFormula());
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(3);
      Long long0 = new Long(792L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(3, transportadoras0.getFormula());
      assertEquals(16.1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long((-1L));
      Double double0 = new Double((-1.2162665729828117));
      transportadoras0.altera(double0, double0, 2);
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2, transportadoras0.getFormula());
      assertEquals(0.7396521882776766, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(1421);
      Long long0 = new Long(3576L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(1421, transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("4]G`8i\"", (-299.2192215611125), (-299.2192215611125), true, 1.0);
      Long long0 = new Long(1L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(803097.3099706932, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(803096.3099706932, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras1.setFormula((-1146));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals((-1146), transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("4]G`8i\"", (-299.2192215611125), (-299.2192215611125), true, 1.0);
      Long long0 = new Long(1997L);
      transportadoras0.calculaPrecoExpedicao(long0);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setVolFaturacao(1.0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(4015482.5498534655, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(transportadoras1.isPremium());
      assertTrue(transportadoras0.equals((Object)transportadoras1));
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setLucro(1421);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(1421.0, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras0.setImposto(4325.055758577603);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(4325.055758577603, transportadoras0.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertTrue(transportadoras1.equals((Object)transportadoras0));
      
      transportadoras0.setNome("@#2yGJ>64c.R2~H-");
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(transportadoras1.equals((Object)transportadoras0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Object object0 = new Object();
      boolean boolean0 = transportadoras0.equals(object0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals((Object) null);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals(transportadoras0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      assertTrue(transportadoras1.isPremium());
      
      transportadoras1.setPremium(false);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      String string0 = transportadoras0.toString();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals("Nome: \nImposto: 0.0\nLucro: 0.0\nPremium: true\n# Formula: 1\n", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 0.0, true, 0.0);
      transportadoras0.setFormula((-1));
      Long long0 = new Long(0L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals((-1), transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
  }
}
