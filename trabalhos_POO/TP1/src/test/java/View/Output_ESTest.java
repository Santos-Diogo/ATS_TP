/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 00:40:41 GMT 2024
 */

package View;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.Encomenda;
import Model.TShirt;
import Model.Transportadoras;
import View.Output;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class Output_ESTest extends Output_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Output output0 = new Output();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "^%e^2{;OP4qh'@:A";
      output0.printMenus(stringArray0, "^%e^2{;OP4qh'@:A", (-1429));
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Output output0 = new Output();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-D~>6?,X#O%$.J[-c";
      stringArray0[1] = "-D~>6?,X#O%$.J[-c";
      stringArray0[2] = "-D~>6?,X#O%$.J[-c";
      output0.printMenus(stringArray0, "-D~>6?,X#O%$.J[-c", 914);
      assertEquals(3, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Output output0 = new Output();
      // Undeclared exception!
      try { 
        output0.printTransportadoras((Map<String, Transportadoras>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Output output0 = new Output();
      // Undeclared exception!
      try { 
        output0.printTop10((Map<String, Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Output output0 = new Output();
      String[] stringArray0 = new String[9];
      // Undeclared exception!
      try { 
        output0.printMenus(stringArray0, "jwh=EZ0H/", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Output output0 = new Output();
      // Undeclared exception!
      try { 
        output0.printEncomendas((List<Encomenda>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Output output0 = new Output();
      // Undeclared exception!
      try { 
        output0.printCarrinho((List<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Output output0 = new Output();
      LinkedList<Artigo> linkedList0 = new LinkedList<Artigo>();
      linkedList0.add((Artigo) null);
      // Undeclared exception!
      try { 
        output0.printArtigos(linkedList0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Output output0 = new Output();
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>();
      Double double0 = new Double(4078.0);
      hashMap0.put((String) null, double0);
      output0.printTop10(hashMap0);
      assertFalse(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Output output0 = new Output();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-1));
      linkedList0.push(integer0);
      output0.printCarrinho(linkedList0);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Output output0 = new Output();
      LinkedList<Encomenda> linkedList0 = new LinkedList<Encomenda>();
      Encomenda encomenda0 = new Encomenda();
      linkedList0.add(encomenda0);
      output0.printEncomendas(linkedList0);
      assertTrue(linkedList0.contains(encomenda0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Output output0 = new Output();
      LinkedList<Artigo> linkedList0 = new LinkedList<Artigo>();
      TShirt tShirt0 = new TShirt();
      linkedList0.add((Artigo) tShirt0);
      output0.printArtigos(linkedList0, (LocalDate) null);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Output output0 = new Output();
      HashMap<String, Transportadoras> hashMap0 = new HashMap<String, Transportadoras>(0);
      Transportadoras transportadoras0 = new Transportadoras();
      hashMap0.put("NBm rt/!f2-<*", transportadoras0);
      output0.printTransportadoras(hashMap0);
      assertFalse(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Output output0 = new Output();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "NBm rt/!f2-<*";
      stringArray0[2] = "";
      stringArray0[3] = "^%{g=mni]Qw0P7<J";
      stringArray0[4] = "NBm rt/!f2-<*";
      output0.printMenus(stringArray0, "NBm rt/!f2-<*", 1);
      assertEquals(5, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Output output0 = new Output();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "0 | Sair";
      stringArray0[1] = "0 | Sair";
      stringArray0[2] = "0 | Sair";
      stringArray0[3] = "0 | Sair";
      stringArray0[4] = "0 | Sair";
      stringArray0[5] = "0 | Sair";
      stringArray0[6] = "0 | Sair";
      output0.printMenus(stringArray0, "0 | Sair", 0);
      assertEquals(7, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Output output0 = new Output();
      output0.printMessage("");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Output output0 = new Output();
      output0.formulasTransportadora();
  }
}
