/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 16:37:17 GMT 2024
 */

package projeto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.time.format.FormatStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import projeto.Artigo;
import projeto.Mala;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mala_ESTest extends Mala_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertNotNull(mala0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      
      mala1.setAno_colecao(29);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(29, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertNotSame(mala0, mala1);
      
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(29, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      
      int int0 = (-2533);
      mala0.setEstado_uso((-2533));
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      
      mala0.setValorizacao(0.0F);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      
      String string0 = Artigo.criaCodigo();
      assertEquals("A2", string0);
      assertNotNull(string0);
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0, int1);
      assertEquals(3L, Artigo.contador);
      assertFalse(int1 == int0);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      
      boolean boolean0 = mala0.equals(mala0);
      assertTrue(boolean0);
      assertEquals(3L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      
      Mala mala1 = mala0.clone();
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Artigo.contador = (-2965L);
      double double0 = mala1.preco_atual((LocalDate) null);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertEquals((-2965L), mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala1.equals(mala0);
      assertTrue(boolean1);
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertEquals((-2965L), mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean2 = mala1.equals(mala0);
      assertTrue(boolean2);
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertEquals((-2965L), mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Artigo.setContador((-2965L));
      mala0.setPremium(true);
      assertEquals((-2965L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      
      mala0.setPremium(true);
      assertEquals((-2965L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      
      int int2 = mala1.getAno_colecao();
      assertEquals(0, int2);
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertEquals((-2965L), mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Mala mala2 = mala1.clone();
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertEquals((-2965L), Artigo.contador);
      assertFalse(mala2.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-2533), mala2.getEstado_uso());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-2965L), mala2.getContador());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("", mala2.getMaterial());
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.getNovo());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-2533), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-2965L), mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-2533), mala1.getEstado_uso());
      assertEquals((-2965L), mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertNotNull(mala2);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      
      // Undeclared exception!
      try { 
        mala0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(mala0);
      
      mala0.setEstado_uso((-713));
      assertEquals(2L, Artigo.contador);
      assertEquals((-713), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals((-713), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-713), mala1.getEstado_uso());
      assertEquals((-1), mala1.getN_utilizadores());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setDimensao((-713));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-713), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-713), mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-713), mala1.getEstado_uso());
      assertEquals((-1), mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-713), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-713), mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-713), mala1.getEstado_uso());
      assertEquals((-1), mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean0 = mala0.equals(mala1);
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-713), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-713), mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-713), mala1.getEstado_uso());
      assertEquals((-1), mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertNotNull(mala0);
      
      mala0.setMaterial("");
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      
      int int0 = 38;
      mala0.setN_utilizadores(38);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals(38, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals(38, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(38, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      
      LocalDate localDate0 = null;
      mala0.setData_venda((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals(38, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertNotSame(mala0, mala1);
      
      mala1.setValorizacao(38);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals(38, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(38, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals(38.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setMaterial("");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals(38, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(38, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals(38.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string0 = Artigo.criaCodigo();
      assertEquals("A2", string0);
      assertNotNull(string0);
      
      // Undeclared exception!
      try { 
        mala0.equals(mala1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(mala0);
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(localDate0);
      
      mala0.setCodigo_barras(" Id da transportadora: ");
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      String string0 = mala0.mostrar(localDate0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras:  Id da transportadora:  Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(string0);
      
      mala0.setAno_colecao(1);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      boolean boolean0 = mala0.isPremium();
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setAno_colecao(274);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setData_venda(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setValorizacao(1);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setPremium(false);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setMaterial((String) null);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(double1, double0, 0.01);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setEstado_uso(507);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      boolean boolean1 = mala0.equals(" Novo: ");
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1 == boolean0);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      boolean boolean2 = mala0.isPremium();
      assertFalse(boolean2);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      boolean boolean3 = mala0.isPremium();
      assertFalse(boolean3);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setDisponivel(false);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      String string1 = mala0.getMaterial();
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNull(string1);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(274, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      float float0 = mala0.getValorizacao();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(274, mala0.getAno_colecao());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setAno_colecao(0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setDimensao(0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertNull(mala1.getMaterial());
      assertEquals(" Id da transportadora: ", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals(507, mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string2 = mala1.mostrar(localDate0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras:  Id da transportadora:  Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 507 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material: null Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 1.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(string2.equals((Object)string0));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.getNovo());
      assertNull(mala1.getMaterial());
      assertEquals(" Id da transportadora: ", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals(507, mala1.getEstado_uso());
      assertEquals(0, mala1.getDimensao());
      assertEquals(1.0F, mala1.getValorizacao(), 0.01F);
      assertNotNull(string2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      double double2 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(double2, double1, 0.01);
      assertEquals(double2, double0, 0.01);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(507, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" Id da transportadora: ", mala0.getCodigo_barras());
      assertEquals(1.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertNull(mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(mala0);
      
      boolean boolean0 = mala0.equals("EEhFLWMY");
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotNull(mala1);
      
      mala1.setMaterial("EEhFLWMY");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Mala mala2 = mala1.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotNull(mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      boolean boolean1 = mala2.equals(mala0);
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertTrue(boolean1 == boolean0);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala1.setCodigo_barras("EEhFLWMY");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      mala2.setMaterial("EEhFLWMY");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala2.setPremium(false);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala1.setAno_colecao((-399));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      float float0 = mala1.getValorizacao();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      boolean boolean2 = mala0.equals("EEhFLWMY");
      assertFalse(boolean2);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      
      mala2.setCodigo_barras("FJ*NfK|C#");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertEquals("FJ*NfK|C#", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      Artigo.setCodigo("A");
      mala0.setValorizacao(839.21F);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      
      int int0 = mala2.getDimensao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertEquals("FJ*NfK|C#", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala1.setPremium(false);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      boolean boolean3 = mala2.isPremium();
      assertFalse(boolean3);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertEquals("FJ*NfK|C#", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala0.setMaterial("A");
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      
      mala1.setMaterial("EEhFLWMY");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      String string0 = mala2.getMaterial();
      assertEquals("EEhFLWMY", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("A", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(839.21F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("EEhFLWMY", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals(2L, mala1.getContador());
      assertEquals((-399), mala1.getAno_colecao());
      assertEquals("EEhFLWMY", mala1.getCodigo_barras());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(2L, mala2.getContador());
      assertFalse(mala2.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("EEhFLWMY", mala2.getMaterial());
      assertEquals("FJ*NfK|C#", mala2.getCodigo_barras());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(0, mala2.getDimensao());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertNotNull(string0);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(mala0);
      
      int int0 = mala0.getDimensao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      long long1 = Long.sum(2847L, (-3068));
      assertEquals((-221L), long1);
      
      Long long2 = Long.getLong("u", 2847L);
      assertEquals(2847L, (long)long2);
      assertFalse(long2.equals((Object)long1));
      assertFalse(long2.equals((Object)long0));
      assertNotNull(long2);
      
      Mala mala1 = new Mala("hrv$R.Dh6='7@58o", "hrv$R.Dh6='7@58o", double0, true, 0, 1120, (Long) 3L, long0, (-3068), "-R C)RglQ,zw", (-15), false, 0.0F);
      assertEquals(3L, Artigo.contador);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-3068), mala1.getDimensao());
      assertEquals("-R C)RglQ,zw", mala1.getMaterial());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals((-15), mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3L, mala1.getContador());
      assertEquals(1120, mala1.getN_utilizadores());
      assertNotNull(mala1);
      
      LocalDate localDate0 = mala1.getData_venda();
      assertEquals(3L, Artigo.contador);
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-3068), mala1.getDimensao());
      assertEquals("-R C)RglQ,zw", mala1.getMaterial());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals((-15), mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3L, mala1.getContador());
      assertEquals(1120, mala1.getN_utilizadores());
      assertNotNull(localDate0);
      assertNotSame(mala1, mala0);
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(0.01, double1, 0.01);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long0.equals((Object)long1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(3L, mala0.getContador());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-3068), mala1.getDimensao());
      assertEquals("-R C)RglQ,zw", mala1.getMaterial());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals((-15), mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(3L, mala1.getIdTransportadora());
      assertTrue(mala1.getNovo());
      assertFalse(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(3L, mala1.getContador());
      assertEquals(1120, mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      // Undeclared exception!
      try { 
        mala0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(mala0);
      
      mala0.setEstado_uso(2902);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      mala0.setValorizacao(0.0F);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      String string0 = mala0.mostrar((LocalDate) null);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string0);
      
      mala0.setNovo(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      String string1 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertEquals(2L, Artigo.contador);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string1);
      
      String string2 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string2);
      assertEquals(2L, Artigo.contador);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, mala0.getDimensao());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string2);
      
      mala0.setVendedor(6L);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      String string3 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: 6 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string3);
      assertEquals(2L, Artigo.contador);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(string3);
      
      double double0 = mala0.preco_atual((LocalDate) null);
      assertEquals(0.01, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      mala0.setDimensao(0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      boolean boolean0 = mala0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      boolean boolean1 = mala0.isPremium();
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1 == boolean0);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      mala0.setMaterial("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0, int1);
      assertEquals(2L, Artigo.contador);
      assertTrue(int1 == int0);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      
      Double double1 = new Double(0);
      assertEquals(0.0, (double)double1, 0.01);
      assertEquals((double)double1, (double)double0, 0.01);
      assertNotNull(double1);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala1 = new Mala("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", "", double1, true, (-1310), (-726), (Long) 3L, long0, 0, " Estado de uso: ", 0, false, (-1310));
      assertEquals(3L, Artigo.contador);
      assertEquals((double)double1, (double)double0, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals(3L, mala1.getIdTransportadora());
      assertEquals(0L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", mala1.getDescricao());
      assertEquals(" Estado de uso: ", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1310.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1310), mala1.getEstado_uso());
      assertEquals((-726), mala1.getN_utilizadores());
      assertNotNull(mala1);
      
      boolean boolean2 = mala0.equals(mala1);
      assertFalse(boolean2);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals((double)double1, (double)double0, 0.01);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals(3L, mala1.getIdTransportadora());
      assertEquals(0L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", mala1.getDescricao());
      assertEquals(" Estado de uso: ", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1310.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1310), mala1.getEstado_uso());
      assertEquals((-726), mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setValorizacao(0.0F);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0, mala0.getDimensao());
      assertEquals(6L, mala0.getIdVendedor());
      assertEquals(3L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals(2902, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: true Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertNotSame(mala0, mala1);
      
      int int2 = mala1.getDimensao();
      assertEquals(0, int2);
      assertEquals(3L, Artigo.contador);
      assertEquals((double)double1, (double)double0, 0.01);
      assertFalse(mala1.equals((Object)mala0));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getDimensao());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals(3L, mala1.getIdTransportadora());
      assertEquals(0L, mala1.getIdVendedor());
      assertFalse(mala1.isPremium());
      assertEquals(3L, mala1.getContador());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: 2902 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", mala1.getDescricao());
      assertEquals(" Estado de uso: ", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1310.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1310), mala1.getEstado_uso());
      assertEquals((-726), mala1.getN_utilizadores());
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotNull(mala0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotNull(mala1);
      
      mala0.setNovo(false);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala1);
      
      mala0.setMaterial("A");
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala1);
      
      mala0.setTransportadora(2L);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala1);
      
      String string0 = mala1.getMaterial();
      assertEquals("", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotNull(string0);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      Mala mala2 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0, mala2.getDimensao());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(2L, mala2.getIdTransportadora());
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdVendedor());
      assertNotNull(mala2);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      boolean boolean0 = mala0.equals("");
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      boolean boolean1 = mala0.isPremium();
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean1 == boolean0);
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      String string1 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 2 Id do vendedor: -1 } Dimens\u00E3o: 0 Material: A Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotNull(string1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      mala0.setAno_colecao((-1006));
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      boolean boolean2 = mala2.equals((Object) null);
      assertFalse(boolean2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getAno_colecao());
      assertEquals(0, mala2.getDimensao());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(2L, mala2.getIdTransportadora());
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdVendedor());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      mala2.setAno_colecao((-1006));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getDimensao());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1006), mala2.getAno_colecao());
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(2L, mala2.getIdTransportadora());
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdVendedor());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      boolean boolean3 = mala0.equals("");
      assertFalse(boolean3);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean4 = mala2.equals(object0);
      assertFalse(boolean4);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getDimensao());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1006), mala2.getAno_colecao());
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(2L, mala2.getIdTransportadora());
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdVendedor());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      int int0 = mala2.getDimensao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala2.getCodigo());
      assertFalse(mala2.getDisponivel());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getDimensao());
      assertEquals("A", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals((-1006), mala2.getAno_colecao());
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(2L, mala2.getIdTransportadora());
      assertEquals(2L, mala2.getContador());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdVendedor());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      boolean boolean5 = mala1.equals(mala0);
      assertFalse(boolean5);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean0);
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      mala0.setPremium(false);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A", mala0.getMaterial());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1006), mala0.getAno_colecao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(2L, mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(mala0);
      
      mala0.setVendedor((-825L));
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getEstado_uso());
      
      mala0.setPreco_base(867.117697);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      
      Artigo.setCodigo("})o6|s)k0\"");
      mala0.setDimensao(1216);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      
      String string0 = mala0.getMaterial();
      assertEquals("", string0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(string0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("})o6|s)k0\"", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(867.117697, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-825L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(1216, mala1.getDimensao());
      assertNotNull(mala1);
      
      boolean boolean0 = mala0.equals(mala1);
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("})o6|s)k0\"", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(867.117697, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-825L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(1216, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala0.isPremium();
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(boolean1 == boolean0);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotSame(mala0, mala1);
      
      String string1 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 867.117697 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -825 } Dimens\u00E3o: 1216 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(string1);
      assertNotSame(mala0, mala1);
      
      String string2 = mala1.getMaterial();
      assertEquals("", string2);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("})o6|s)k0\"", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(867.117697, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-825L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(1216, mala1.getDimensao());
      assertNotNull(string2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean2 = mala0.isPremium();
      assertFalse(boolean2);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotSame(mala0, mala1);
      
      Period period0 = Period.ZERO;
      assertNotNull(period0);
      
      IsoChronology isoChronology0 = period0.getChronology();
      assertNotNull(isoChronology0);
      
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      assertNotNull(zoneOffset0);
      
      ZoneId zoneId0 = zoneOffset0.normalized();
      assertNotNull(zoneId0);
      assertSame(zoneOffset0, zoneId0);
      assertSame(zoneId0, zoneOffset0);
      
      Period period1 = Period.ofDays(1216);
      assertFalse(period1.equals((Object)period0));
      assertNotNull(period1);
      assertNotSame(period1, period0);
      
      Period period2 = period0.minus(period1);
      assertFalse(period1.equals((Object)period0));
      assertFalse(period2.equals((Object)period0));
      assertFalse(period2.equals((Object)period1));
      assertFalse(period0.equals((Object)period1));
      assertNotNull(period2);
      assertNotSame(period1, period2);
      assertNotSame(period1, period0);
      assertNotSame(period2, period0);
      assertNotSame(period2, period1);
      assertNotSame(period0, period1);
      assertNotSame(period0, period2);
      
      Period period3 = period0.minus(period2);
      assertFalse(period1.equals((Object)period2));
      assertFalse(period1.equals((Object)period0));
      assertFalse(period2.equals((Object)period0));
      assertFalse(period2.equals((Object)period1));
      assertTrue(period3.equals((Object)period1));
      assertFalse(period3.equals((Object)period0));
      assertFalse(period3.equals((Object)period2));
      assertFalse(period0.equals((Object)period1));
      assertFalse(period0.equals((Object)period2));
      assertNotNull(period3);
      assertNotSame(period1, period3);
      assertNotSame(period1, period2);
      assertNotSame(period1, period0);
      assertNotSame(period2, period0);
      assertNotSame(period2, period3);
      assertNotSame(period2, period1);
      assertNotSame(period3, period1);
      assertNotSame(period3, period0);
      assertNotSame(period3, period2);
      assertNotSame(period0, period1);
      assertNotSame(period0, period3);
      assertNotSame(period0, period2);
      
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      assertFalse(period0.equals((Object)period1));
      assertFalse(period0.equals((Object)period3));
      assertFalse(period0.equals((Object)period2));
      assertNotNull(localDate0);
      assertNotSame(period0, period1);
      assertNotSame(period0, period3);
      assertNotSame(period0, period2);
      assertSame(zoneOffset0, zoneId0);
      assertSame(zoneId0, zoneOffset0);
      
      double double0 = mala1.preco_atual(localDate0);
      assertEquals(866.4046067886513, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(period0.equals((Object)period1));
      assertFalse(period0.equals((Object)period3));
      assertFalse(period0.equals((Object)period2));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("})o6|s)k0\"", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(867.117697, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-825L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(1216, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(period0, period1);
      assertNotSame(period0, period3);
      assertNotSame(period0, period2);
      assertSame(zoneOffset0, zoneId0);
      assertSame(zoneId0, zoneOffset0);
      
      Mala mala2 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(867.117697, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(1216, mala2.getDimensao());
      assertEquals(0, mala2.getAno_colecao());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals("})o6|s)k0\"", mala2.getCodigo());
      assertFalse(mala2.isPremium());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-825L), mala2.getIdVendedor());
      assertEquals(2L, mala2.getContador());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("", mala2.getMaterial());
      assertFalse(mala2.getDisponivel());
      assertFalse(mala2.getNovo());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals((-1), mala2.getN_utilizadores());
      assertNotNull(mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      int int0 = mala1.getDimensao();
      assertEquals(1216, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala1.equals((Object)mala2));
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals("})o6|s)k0\"", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1216, mala0.getDimensao());
      assertEquals((-825L), mala0.getIdVendedor());
      assertEquals(867.117697, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("})o6|s)k0\"", mala1.getCodigo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(867.117697, mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-825L), mala1.getIdVendedor());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals(1216, mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Long long1 = new Long(0);
      assertEquals(0L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      assertNotNull(long1);
      
      Long long2 = Long.getLong("&@TX?Qb3i", long1);
      assertEquals(0L, (long)long2);
      assertTrue(long1.equals((Object)long0));
      assertTrue(long2.equals((Object)long0));
      assertNotNull(long2);
      
      Mala mala0 = new Mala("&@TX?Qb3i", "|K-", double0, false, 0, 0, long0, long0, 88, "&@TX?Qb3i", 0, false, 0.0F);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long2));
      assertTrue(long0.equals((Object)long1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("|K-", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(88, mala0.getDimensao());
      assertEquals("&@TX?Qb3i", mala0.getDescricao());
      assertEquals("&@TX?Qb3i", mala0.getMaterial());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertNotNull(mala0);
      
      long long3 = Long.remainderUnsigned(0, 2L);
      assertEquals(0L, long3);
      
      double double1 = mala0.preco_atual((LocalDate) null);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertTrue(long0.equals((Object)long3));
      assertTrue(long0.equals((Object)long2));
      assertTrue(long0.equals((Object)long1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("|K-", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(88, mala0.getDimensao());
      assertEquals("&@TX?Qb3i", mala0.getDescricao());
      assertEquals("&@TX?Qb3i", mala0.getMaterial());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      
      double double2 = mala0.preco_atual((LocalDate) null);
      assertEquals(Double.NaN, double2, 0.01);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertTrue(long0.equals((Object)long2));
      assertTrue(long0.equals((Object)long1));
      assertEquals(double2, double1, 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("|K-", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(88, mala0.getDimensao());
      assertEquals("&@TX?Qb3i", mala0.getDescricao());
      assertEquals("&@TX?Qb3i", mala0.getMaterial());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      
      mala0.setMaterial("&@TX?Qb3i");
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertNotEquals((double)double0, (double)double2, 0.01);
      assertTrue(long0.equals((Object)long3));
      assertTrue(long0.equals((Object)long2));
      assertTrue(long0.equals((Object)long1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("|K-", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(88, mala0.getDimensao());
      assertEquals("&@TX?Qb3i", mala0.getDescricao());
      assertEquals("&@TX?Qb3i", mala0.getMaterial());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      double double1 = Double.min(0.0, 0.0);
      assertEquals(0.0, double1, 0.01);
      
      Long long0 = new Long((-778L));
      assertEquals((-778L), (long)long0);
      assertNotNull(long0);
      
      Long long1 = new Long((-595L));
      assertEquals((-595L), (long)long1);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(long1);
      
      int int0 = Long.compare((-778L), (-778L));
      assertEquals(0, int0);
      
      Mala mala0 = new Mala(" Material: ", "}", double0, true, 0, 0, long0, long1, 0, "U&j^-=PcOu:BhQLz*", 544, true, 0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("U&j^-=PcOu:BhQLz*", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertNotNull(mala0);
      
      mala0.setMaterial(" Material: ");
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      
      int int1 = Long.compare(0, 1L);
      assertEquals((-1), int1);
      assertFalse(int1 == int0);
      
      long long2 = Long.remainderUnsigned(1L, 1L);
      assertEquals(0L, long2);
      
      mala0.setPreco_base(0.0);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-778L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(" Material: ", mala1.getMaterial());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getDisponivel());
      assertEquals("}", mala1.getMarca());
      assertEquals(544, mala1.getAno_colecao());
      assertEquals(" Material: ", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertEquals((-595L), mala1.getIdVendedor());
      assertEquals(0, mala1.getN_utilizadores());
      assertNotNull(mala1);
      
      boolean boolean0 = mala1.equals(long1);
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-778L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(" Material: ", mala1.getMaterial());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getDisponivel());
      assertEquals("}", mala1.getMarca());
      assertEquals(544, mala1.getAno_colecao());
      assertEquals(" Material: ", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertEquals((-595L), mala1.getIdVendedor());
      assertEquals(0, mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(544);
      assertNotNull(localDate0);
      
      double double2 = mala1.preco_atual(localDate0);
      assertEquals(0.01, double2, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long0.equals((Object)long2));
      assertFalse(long1.equals((Object)long2));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(double2, double1, 0.01);
      assertTrue(mala0.getDisponivel());
      assertEquals("}", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals(" Material: ", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getNovo());
      assertEquals((-778L), mala0.getIdTransportadora());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-595L), mala0.getIdVendedor());
      assertEquals(544, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(" Material: ", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-778L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(" Material: ", mala1.getMaterial());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getEstado_uso());
      assertTrue(mala1.getNovo());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getDisponivel());
      assertEquals("}", mala1.getMarca());
      assertEquals(544, mala1.getAno_colecao());
      assertEquals(" Material: ", mala1.getDescricao());
      assertTrue(mala1.isPremium());
      assertEquals((-595L), mala1.getIdVendedor());
      assertEquals(0, mala1.getN_utilizadores());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Long long1 = new Long((-1772L));
      assertEquals((-1772L), (long)long1);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(long1);
      
      double double1 = Double.min(187.71662, 1410.7880331077242);
      assertEquals(187.71662, double1, 0.01);
      
      Mala mala0 = new Mala("", "", double0, true, 1, 0, long0, long1, 0, "", (-1), true, (-1));
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertNotNull(mala0);
      
      mala0.setTransportadora((-1));
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals((-1772L), mala1.getIdVendedor());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setPreco_base(0L);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals((-1772L), mala1.getIdVendedor());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setDimensao(0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals((-1772L), mala1.getIdVendedor());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      int int0 = mala0.getAno_colecao();
      assertEquals((-1), int0);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertNotSame(mala0, mala1);
      
      int int1 = mala1.getAno_colecao();
      assertEquals((-1), int1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(int1 == int0);
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getDescricao());
      assertTrue(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1772L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals("", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getAno_colecao());
      assertEquals(1, mala0.getEstado_uso());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getDescricao());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getAno_colecao());
      assertEquals((-1772L), mala1.getIdVendedor());
      assertEquals(1, mala1.getEstado_uso());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertNotNull(mala0);
      
      mala0.setAno_colecao(3068);
      assertEquals(2L, Artigo.contador);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(3068, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(3068, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(3068, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotNull(mala1);
      
      Artigo.contador = 0L;
      Mala mala2 = mala1.clone();
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(3068, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0L, mala1.getContador());
      assertEquals(3068, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals(3068, mala2.getAno_colecao());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala2.getMarca());
      assertFalse(mala2.getNovo());
      assertEquals(0L, mala2.getContador());
      assertFalse(mala2.getDisponivel());
      assertEquals(0, mala2.getDimensao());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals("", mala2.getMaterial());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertNotNull(mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      
      mala1.setMaterial("A");
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(3068, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0L, mala1.getContador());
      assertEquals(3068, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      mala1.setMaterial("A");
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.equals((Object)mala2));
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(3068, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0L, mala1.getContador());
      assertEquals(3068, mala1.getAno_colecao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("A", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertNotSame(mala0, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Double double0 = new Double((-1.0));
      assertEquals((-1.0), (double)double0, 0.01);
      assertNotNull(double0);
      
      double double1 = Double.min(0.0, 0.0);
      assertEquals(0.0, double1, 0.01);
      
      Long long0 = new Long(1771);
      assertEquals(1771L, (long)long0);
      assertNotNull(long0);
      
      Long long1 = new Long(0L);
      assertEquals(0L, (long)long1);
      assertFalse(long1.equals((Object)long0));
      assertNotNull(long1);
      
      Mala mala0 = new Mala("*6VK]pHm)vEd~t{!X", " Material: ", double0, true, 1771, 2242, long0, long1, (-1048), "s<0Y^c", 2242, false, 1771);
      assertEquals(2L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1771.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("s<0Y^c", mala0.getMaterial());
      assertEquals(1771L, mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1771, mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals((-1048), mala0.getDimensao());
      assertEquals(2242, mala0.getAno_colecao());
      assertEquals("*6VK]pHm)vEd~t{!X", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMarca());
      assertEquals(2242, mala0.getN_utilizadores());
      assertNotNull(mala0);
      
      String string0 = Artigo.criaCodigo();
      assertEquals("A2", string0);
      assertNotNull(string0);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(2242, int0);
      assertEquals(3L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1771.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("s<0Y^c", mala0.getMaterial());
      assertEquals(1771L, mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1771, mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals((-1048), mala0.getDimensao());
      assertEquals(2242, mala0.getAno_colecao());
      assertEquals("*6VK]pHm)vEd~t{!X", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMarca());
      assertEquals(2242, mala0.getN_utilizadores());
      
      String string1 = Artigo.criaCodigo();
      assertEquals("A3", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      mala0.setMaterial("");
      assertEquals(4L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertEquals(4L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1771.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(1771L, mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1771, mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals((-1048), mala0.getDimensao());
      assertEquals(2242, mala0.getAno_colecao());
      assertEquals("*6VK]pHm)vEd~t{!X", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMarca());
      assertEquals(2242, mala0.getN_utilizadores());
      
      int int1 = mala0.getDimensao();
      assertEquals((-1048), int1);
      assertEquals(4L, Artigo.contador);
      assertNotEquals((double)double0, (double)double1, 0.01);
      assertFalse(long0.equals((Object)long1));
      assertFalse(long1.equals((Object)long0));
      assertFalse(int1 == int0);
      assertEquals(4L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(1771.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(1771L, mala0.getIdTransportadora());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(1771, mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0), mala0.getPreco_base(), 0.01);
      assertEquals((-1048), mala0.getDimensao());
      assertEquals(2242, mala0.getAno_colecao());
      assertEquals("*6VK]pHm)vEd~t{!X", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getMarca());
      assertEquals(2242, mala0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertNotNull(mala0);
      
      mala0.setNovo(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      
      mala0.setValorizacao((-2479.1675F));
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-2479.1675F), mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      
      mala0.setDescricao(" Material: ");
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-2479.1675F), mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      
      mala0.setDescricao(" Material: ");
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-2479.1675F), mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      
      mala0.setValorizacao((-1633.2F));
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1633.2F), mala0.getValorizacao(), 0.01F);
      
      mala0.setMaterial("54b{`tB\bi-}h\"");
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals("54b{`tB\bi-}h\"", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1633.2F), mala0.getValorizacao(), 0.01F);
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals("54b{`tB\bi-}h\"", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1633.2F), mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("54b{`tB\bi-}h\"", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getDescricao());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1633.2F), mala1.getValorizacao(), 0.01F);
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      int int0 = 1006;
      mala1.setDimensao(1006);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals("54b{`tB\bi-}h\"", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1633.2F), mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("54b{`tB\bi-}h\"", mala1.getMaterial());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertTrue(mala1.isPremium());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(" Material: ", mala1.getDescricao());
      assertEquals(1006, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1633.2F), mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setN_utilizadores(1006);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertTrue(mala0.getNovo());
      assertEquals("54b{`tB\bi-}h\"", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals(" Material: ", mala0.getDescricao());
      assertTrue(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1006, mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1633.2F), mala0.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala1);
      
      // Undeclared exception!
      try { 
        mala0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-5054.8870425776));
      assertEquals((-5054.8870425776), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-1331));
      assertEquals((-1331L), (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("HQ", "HQ", double0, true, 45, (-1331), long0, long0, (-1331), "Bd5lK)YdJ47O`B", 0, true, 1616.6074F);
      assertEquals(2L, Artigo.contador);
      assertEquals((-5054.8870425776), mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertEquals((-1331), mala0.getDimensao());
      assertEquals(1616.6074F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals((-1331L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(45, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Bd5lK)YdJ47O`B", mala0.getMaterial());
      assertEquals((-1331), mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1331L), mala0.getIdVendedor());
      assertEquals("HQ", mala0.getMarca());
      assertEquals("HQ", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertNotNull(mala0);
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertEquals((-5054.8870425776), mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertEquals((-1331), mala0.getDimensao());
      assertEquals(1616.6074F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals((-1331L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(45, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Bd5lK)YdJ47O`B", mala0.getMaterial());
      assertEquals((-1331), mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1331L), mala0.getIdVendedor());
      assertEquals("HQ", mala0.getMarca());
      assertEquals("HQ", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(0.01, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-5054.8870425776), mala0.getPreco_base(), 0.01);
      assertTrue(mala0.isPremium());
      assertEquals((-1331), mala0.getDimensao());
      assertEquals(1616.6074F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals((-1331L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals(45, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Bd5lK)YdJ47O`B", mala0.getMaterial());
      assertEquals((-1331), mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1331L), mala0.getIdVendedor());
      assertEquals("HQ", mala0.getMarca());
      assertEquals("HQ", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertNotNull(mala0);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      LocalDate localDate1 = MockLocalDate.from(localDate0);
      assertNotNull(localDate1);
      assertSame(localDate0, localDate1);
      assertSame(localDate1, localDate0);
      
      double double0 = mala0.preco_atual(localDate1);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertSame(localDate0, localDate1);
      assertSame(localDate1, localDate0);
      
      mala0.setVendedor(1L);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      boolean boolean0 = mala0.isPremium();
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      String string0 = mala0.getMaterial();
      assertEquals("", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertNotNull(string0);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      boolean boolean1 = mala0.equals("A");
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1 == boolean0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      boolean boolean2 = mala0.equals(object0);
      assertFalse(boolean2);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      mala0.setValorizacao(122.69F);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(122.69F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(double1, double0, 0.01);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(122.69F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertSame(localDate0, localDate1);
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(122.69F, mala0.getValorizacao(), 0.01F);
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.isPremium());
      assertEquals(1L, mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(122.69F, mala1.getValorizacao(), 0.01F);
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double(2483.58366614455);
      assertEquals(2483.58366614455, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("Ip+jr5xK8.$#co2", "ho1d~#NeD60'fUb3rc", double0, true, 0, (-1), long0, long0, (-1), "5;f9>cLxyV?DIb_V", 0, true, 0.0F);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals(2483.58366614455, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getNovo());
      assertEquals("5;f9>cLxyV?DIb_V", mala0.getMaterial());
      assertEquals("ho1d~#NeD60'fUb3rc", mala0.getMarca());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Ip+jr5xK8.$#co2", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1), mala0.getDimensao());
      assertNotNull(mala0);
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals(2483.58366614455, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.getNovo());
      assertEquals("5;f9>cLxyV?DIb_V", mala0.getMaterial());
      assertEquals("ho1d~#NeD60'fUb3rc", mala0.getMarca());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Ip+jr5xK8.$#co2", mala0.getDescricao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1), mala0.getDimensao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.isPremium());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals("ho1d~#NeD60'fUb3rc", mala1.getMarca());
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(2483.58366614455, mala1.getPreco_base(), 0.01);
      assertEquals("5;f9>cLxyV?DIb_V", mala1.getMaterial());
      assertEquals((-1), mala1.getDimensao());
      assertEquals("Ip+jr5xK8.$#co2", mala1.getDescricao());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0, mala1.getEstado_uso());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double(1193.4);
      assertEquals(1193.4, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("+1", "+1", double0, false, 4461, 0, long0, long0, 1270, "WOx/ujb'", 10, false, 4461);
      assertEquals(2L, Artigo.contador);
      assertEquals("WOx/ujb'", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(4461.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("+1", mala0.getMarca());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1193.4, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(1270, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("+1", mala0.getDescricao());
      assertEquals(4461, mala0.getEstado_uso());
      assertTrue(mala0.getDisponivel());
      assertNotNull(mala0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("WOx/ujb'", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(4461.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("+1", mala0.getMarca());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1193.4, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(1270, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("+1", mala0.getDescricao());
      assertEquals(4461, mala0.getEstado_uso());
      assertTrue(mala0.getDisponivel());
      assertEquals("WOx/ujb'", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals("+1", mala1.getMarca());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(4461.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getNovo());
      assertEquals("+1", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(1270, mala1.getDimensao());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(1193.4, mala1.getPreco_base(), 0.01);
      assertEquals(4461, mala1.getEstado_uso());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertNotNull(mala1);
      
      float float0 = mala1.getValorizacao();
      assertEquals(4461.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("WOx/ujb'", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(4461.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("+1", mala0.getMarca());
      assertEquals(10, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(1193.4, mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(1270, mala0.getDimensao());
      assertEquals(2L, mala0.getContador());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.getNovo());
      assertEquals("+1", mala0.getDescricao());
      assertEquals(4461, mala0.getEstado_uso());
      assertTrue(mala0.getDisponivel());
      assertEquals("WOx/ujb'", mala1.getMaterial());
      assertTrue(mala1.getDisponivel());
      assertEquals("+1", mala1.getMarca());
      assertEquals(0L, mala1.getIdTransportadora());
      assertEquals(4461.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getNovo());
      assertEquals("+1", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(1270, mala1.getDimensao());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(1193.4, mala1.getPreco_base(), 0.01);
      assertEquals(4461, mala1.getEstado_uso());
      assertEquals(10, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("A", mala1.getCodigo());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(mala0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      mala0.setPreco_base((-97.903293503));
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      
      boolean boolean0 = mala0.equals(object0);
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      
      mala0.setTransportadora((-1L));
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      
      boolean boolean1 = mala0.isPremium();
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1 == boolean0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      
      String string0 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(string0);
      
      mala0.setDisponivel(false);
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-97.903293503), mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      float float0 = mala0.getValorizacao();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotSame(mala0, mala1);
      
      mala1.setN_utilizadores(0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-97.903293503), mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setCodigo_barras((String) null);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNull(mala1.getCodigo_barras());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-97.903293503), mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setTransportadora(0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotSame(mala0, mala1);
      
      Artigo.setCodigo("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      mala1.setAno_colecao(3716);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNull(mala1.getCodigo_barras());
      assertEquals(3716, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-97.903293503), mala1.getPreco_base(), 0.01);
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals(0, mala1.getDimensao());
      assertEquals("", mala1.getMaterial());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala1.getCodigo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string1 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: 0 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(string1);
      assertNotSame(mala0, mala1);
      
      Mala mala2 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala2.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala0.equals((Object)mala1));
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala2.getCodigo());
      assertEquals(0, mala2.getAno_colecao());
      assertFalse(mala2.getDisponivel());
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals((-1), mala2.getEstado_uso());
      assertFalse(mala2.isPremium());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals(2L, mala2.getContador());
      assertEquals("", mala2.getMaterial());
      assertEquals((-97.903293503), mala2.getPreco_base(), 0.01);
      assertFalse(mala2.getNovo());
      assertEquals(0, mala2.getDimensao());
      assertEquals(0L, mala2.getIdTransportadora());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: -97.903293503 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals((-97.903293503), mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(mala2);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long(169);
      assertEquals(169L, (long)long0);
      assertNotNull(long0);
      
      Long long1 = Long.getLong("<D3jIG<bz\"P/Iu]8x", (long) 169);
      assertEquals(169L, (long)long1);
      assertTrue(long1.equals((Object)long0));
      assertNotNull(long1);
      
      boolean boolean0 = false;
      Mala mala0 = null;
      try {
        mala0 = new Mala("r+GODt$Fh[1\t\"D", " N\u00FAmero de utilizadores: ", (Double) null, false, 169, 169, long0, long1, 10, "QO?2TdD`iAqIl?5T", (-1), false, 1258.6389F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-3040.5746623631026));
      assertEquals((-3040.5746623631026), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-1079));
      assertEquals((-1079L), (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("oIUmaH^g+Q9;N&`f", "oIUmaH^g+Q9;N&`f", double0, true, 0, (-1079), long0, long0, 366, "oIUmaH^g+Q9;N&`f", 366, true, (-1079));
      assertEquals(2L, Artigo.contador);
      assertEquals((-1079L), mala0.getIdVendedor());
      assertEquals(366, mala0.getDimensao());
      assertEquals(366, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getNovo());
      assertEquals((-1079L), mala0.getIdTransportadora());
      assertEquals((-1079.0F), mala0.getValorizacao(), 0.01F);
      assertEquals((-1079), mala0.getN_utilizadores());
      assertEquals((-3040.5746623631026), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getDescricao());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertNotNull(mala0);
      
      boolean boolean0 = mala0.equals("oIUmaH^g+Q9;N&`f");
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1079L), mala0.getIdVendedor());
      assertEquals(366, mala0.getDimensao());
      assertEquals(366, mala0.getAno_colecao());
      assertTrue(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getNovo());
      assertEquals((-1079L), mala0.getIdTransportadora());
      assertEquals((-1079.0F), mala0.getValorizacao(), 0.01F);
      assertEquals((-1079), mala0.getN_utilizadores());
      assertEquals((-3040.5746623631026), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getDescricao());
      assertEquals("oIUmaH^g+Q9;N&`f", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(mala0);
      
      mala0.setMaterial(">y#LyOU");
      assertEquals(2L, Artigo.contador);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      
      float float0 = mala0.getValorizacao();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals(2L, Artigo.contador);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      
      String string0 = mala0.getMaterial();
      assertEquals(">y#LyOU", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotNull(string0);
      
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(">y#LyOU", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean0 = mala1.equals(mala0);
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(">y#LyOU", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      String string1 = mala1.getMaterial();
      assertEquals(">y#LyOU", string1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(">y#LyOU", mala1.getMaterial());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.getDisponivel());
      assertEquals(0, mala1.getDimensao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertNotNull(string1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      boolean boolean1 = mala0.equals(">y#LyOU");
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(boolean1 == boolean0);
      assertEquals(">y#LyOU", mala0.getMaterial());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertNotNull(mala0);
      
      mala0.setDisponivel(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      
      mala0.setNovo(true);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      
      mala0.setEstado_uso(685);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      
      mala0.setN_utilizadores(685);
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      
      mala0.setValorizacao((-1168.5F));
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      
      Artigo.contador = (-1L);
      int int0 = mala0.getDimensao();
      assertEquals(0, int0);
      assertEquals((-1L), Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      
      float float0 = mala0.getValorizacao();
      assertEquals((-1168.5F), float0, 0.01F);
      assertEquals((-1L), Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      
      Mala mala1 = mala0.clone();
      assertEquals((-1L), Artigo.contador);
      assertEquals((-1L), Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      assertEquals((-1168.5F), mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(685, mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(685, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getContador());
      assertFalse(mala1.isPremium());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setMaterial("A");
      assertEquals((-1L), Artigo.contador);
      assertEquals((-1L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      assertEquals((-1168.5F), mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(685, mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals("A", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(685, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getContador());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0, int1);
      assertEquals((-1L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      assertNotSame(mala0, mala1);
      
      float float1 = mala1.getValorizacao();
      assertEquals((-1168.5F), float1, 0.01F);
      assertEquals((-1L), Artigo.contador);
      assertEquals((-1L), Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(float1, float0, 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals(685, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1168.5F), mala0.getValorizacao(), 0.01F);
      assertEquals("", mala0.getMaterial());
      assertEquals(685, mala0.getEstado_uso());
      assertEquals((-1168.5F), mala1.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(685, mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("A1", mala1.getCodigo_barras());
      assertTrue(mala1.getDisponivel());
      assertTrue(mala1.getNovo());
      assertEquals("A", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(685, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getContador());
      assertFalse(mala1.isPremium());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      // Undeclared exception!
      try { 
        ZoneOffset.ofHoursMinutesSeconds(685, 685, 0);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Zone offset hours not in valid range: value 685 is not in the range -18 to 18
         //
         verifyException("java.time.ZoneOffset", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      
      mala0.setDimensao(2624);
      assertEquals(2L, Artigo.contador);
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals(2624, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertNotNull(mala1);
      
      Mala mala2 = mala1.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertTrue(mala2.equals((Object)mala1));
      assertTrue(mala2.equals((Object)mala0));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals(2624, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertFalse(mala2.isPremium());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals((-1), mala2.getN_utilizadores());
      assertEquals((-1L), mala2.getIdVendedor());
      assertEquals("", mala2.getMaterial());
      assertEquals("A", mala2.getCodigo());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A1", mala2.getCodigo_barras());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertFalse(mala2.getNovo());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals(2624, mala2.getDimensao());
      assertFalse(mala2.getDisponivel());
      assertEquals(2L, mala2.getContador());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals(0, mala2.getAno_colecao());
      assertNotNull(mala2);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      assertNotSame(mala2, mala0);
      assertNotSame(mala2, mala1);
      
      mala0.setPreco_base(0.0);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      boolean boolean0 = mala1.isPremium();
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals(2624, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      int int0 = mala1.getAno_colecao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.getDisponivel());
      assertEquals(2624, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.isPremium());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertFalse(mala1.getNovo());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotSame(mala1, mala2);
      
      String string0 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 2624 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertEquals(2624, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(string0);
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      
      String string1 = Artigo.criaCodigo();
      assertEquals("A2", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      FormatStyle formatStyle0 = FormatStyle.FULL;
      DateTimeFormatter dateTimeFormatter0 = DateTimeFormatter.ofLocalizedTime(formatStyle0);
      assertNotNull(dateTimeFormatter0);
      
      // Undeclared exception!
      try { 
        MockLocalDate.parse((CharSequence) "A2", dateTimeFormatter0);
        fail("Expecting exception: DateTimeParseException");
      
      } catch(DateTimeParseException e) {
         //
         // Text 'A2' could not be parsed at index 0
         //
         verifyException("java.time.format.DateTimeFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(mala0);
      
      String string0 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertNotNull(string0);
      
      boolean boolean0 = mala0.equals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}");
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      
      mala0.setN_utilizadores(0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      
      Artigo.setCodigo("A");
      mala0.setDimensao(0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(double1, double0, 0.01);
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Mala mala0 = null;
      try {
        mala0 = new Mala((Mala) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(mala0);
      
      mala0.setMarca(" Id da transportadora: ");
      assertEquals(2L, Artigo.contador);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(" Id da transportadora: ", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      
      Mala mala2 = new Mala();
      assertEquals(3L, Artigo.contador);
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(3L, mala2.getContador());
      assertEquals((-1L), mala2.getIdVendedor());
      assertFalse(mala2.getNovo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(0, mala2.getAno_colecao());
      assertFalse(mala2.getDisponivel());
      assertEquals("A2", mala2.getCodigo_barras());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A", mala2.getCodigo());
      assertNotNull(mala2);
      
      boolean boolean0 = mala1.equals(mala2);
      assertFalse(boolean0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala2.equals((Object)mala1));
      assertFalse(mala2.equals((Object)mala0));
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(" Id da transportadora: ", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertEquals((-1), mala2.getN_utilizadores());
      assertFalse(mala2.isPremium());
      assertEquals((-1L), mala2.getIdTransportadora());
      assertEquals(3L, mala2.getContador());
      assertEquals((-1L), mala2.getIdVendedor());
      assertFalse(mala2.getNovo());
      assertEquals(0.0F, mala2.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala2.getMarca());
      assertEquals((-1), mala2.getEstado_uso());
      assertEquals(0, mala2.getDimensao());
      assertEquals(0, mala2.getAno_colecao());
      assertFalse(mala2.getDisponivel());
      assertEquals("A2", mala2.getCodigo_barras());
      assertEquals("Artigo invalido", mala2.getDescricao());
      assertEquals("", mala2.getMaterial());
      assertEquals(0.0, mala2.getPreco_base(), 0.01);
      assertEquals("A", mala2.getCodigo());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
      assertNotSame(mala2, mala1);
      assertNotSame(mala2, mala0);
      
      boolean boolean1 = mala1.equals(mala0);
      assertTrue(boolean1);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala2));
      assertTrue(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala2));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(boolean1 == boolean0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala0.getMaterial());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(" Id da transportadora: ", mala0.getMarca());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(" Id da transportadora: ", mala1.getMarca());
      assertEquals("A", mala1.getCodigo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(3L, mala1.getContador());
      assertEquals((-1L), mala1.getIdVendedor());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertNotSame(mala0, mala2);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala2);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(mala0);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2L);
      assertNotNull(localDate0);
      
      String string0 = mala0.mostrar(localDate0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", string0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(string0);
      
      String string1 = mala0.getMaterial();
      assertEquals("", string1);
      assertEquals(2L, Artigo.contador);
      assertFalse(string1.equals((Object)string0));
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(string1);
      
      mala0.setMaterial("");
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      boolean boolean0 = mala0.isPremium();
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      
      int int1 = mala0.getDimensao();
      assertEquals(0, int1);
      assertEquals(2L, Artigo.contador);
      assertTrue(int1 == int0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.isPremium());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertNotNull(mala0);
      
      mala0.setValorizacao(0.0F);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      
      Mala mala1 = new Mala(mala0);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("", mala1.getMaterial());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertNotNull(mala1);
      
      mala1.setMaterial("L^g9,$,Q~BF2jP>gu}?");
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A", mala1.getCodigo());
      assertEquals("L^g9,$,Q~BF2jP>gu}?", mala1.getMaterial());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertNotNull(mala0);
      
      boolean boolean0 = mala0.isPremium();
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      
      LocalDate localDate0 = mala0.getData_venda();
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertNotNull(localDate0);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(Double.NaN, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.isPremium());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertNotNull(mala0);
      
      Mala mala1 = new Mala();
      assertEquals(3L, Artigo.contador);
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("", mala1.getMaterial());
      assertNotNull(mala1);
      
      mala1.setMaterial("L^g9,$,Q~BF2jP>gu}?");
      assertEquals(3L, Artigo.contador);
      assertFalse(mala1.equals((Object)mala0));
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("L^g9,$,Q~BF2jP>gu}?", mala1.getMaterial());
      assertNotSame(mala1, mala0);
      
      boolean boolean0 = mala0.equals(mala1);
      assertFalse(boolean0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("", mala0.getMaterial());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(3L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertFalse(mala1.getDisponivel());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("A2", mala1.getCodigo_barras());
      assertEquals("L^g9,$,Q~BF2jP>gu}?", mala1.getMaterial());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      // Undeclared exception!
      try { 
        MockLocalDate.of((-276), (-276), 27);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): -276
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      
      Artigo.setContador(2L);
      float float0 = mala0.getValorizacao();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      boolean boolean0 = mala0.equals("A");
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-1L));
      assertNotNull(localDate0);
      
      mala0.setTransportadora((-1L));
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      mala0.setData_venda(localDate0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      boolean boolean1 = mala0.equals((Object) null);
      assertFalse(boolean1);
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean1 == boolean0);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      Artigo.contador = 2L;
      mala0.setN_utilizadores(0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      
      Artigo.setCodigo("A");
      Mala mala1 = mala0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotNull(mala1);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala1.setTransportadora((-1L));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.equals((Object)mala1));
      assertTrue(mala1.equals((Object)mala0));
      assertFalse(mala0.isPremium());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals((-1), mala1.getEstado_uso());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals(0, mala1.getDimensao());
      assertFalse(mala1.getNovo());
      assertFalse(mala1.getDisponivel());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertFalse(mala1.isPremium());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(0, mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals("", mala1.getMaterial());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      double double0 = mala0.preco_atual(localDate0);
      assertEquals(0.01, double0, 0.01);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      mala0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      int int0 = mala0.getAno_colecao();
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      String string0 = mala0.getMaterial();
      assertEquals("", string0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(string0);
      assertNotSame(mala0, mala1);
      
      mala0.setAno_colecao(0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      mala0.setDisponivel(true);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      double double1 = mala0.preco_atual(localDate0);
      assertEquals(0.01, double1, 0.01);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      int int1 = mala0.getAno_colecao();
      assertEquals(0, int1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int1 == int0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      mala0.setDisponivel(false);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      mala0.setDimensao(0);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      int int2 = mala0.getAno_colecao();
      assertEquals(0, int2);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
      
      String string1 = mala0.getMaterial();
      assertEquals("", string1);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(string1);
      assertNotSame(mala0, mala1);
      
      boolean boolean2 = mala0.isPremium();
      assertTrue(boolean2);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(mala0.isPremium());
      assertFalse(mala0.getNovo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertFalse(mala0.getDisponivel());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotSame(mala0, mala1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      mala0.setCodigo_barras(" Id da transportadora: ");
      mala0.mostrar(localDate0);
      mala0.setAno_colecao(1);
      mala0.isPremium();
      mala0.setAno_colecao(274);
      mala0.preco_atual(localDate0);
      mala0.setData_venda(localDate0);
      mala0.setValorizacao(1);
      mala0.setPremium(false);
      mala0.setMaterial((String) null);
      mala0.preco_atual(localDate0);
      mala0.setEstado_uso(507);
      mala0.equals(" Novo: ");
      mala0.isPremium();
      mala0.isPremium();
      mala0.setDisponivel(false);
      mala0.getMaterial();
      mala0.getAno_colecao();
      mala0.getValorizacao();
      mala0.setAno_colecao(0);
      mala0.setDimensao(0);
      Mala mala1 = mala0.clone();
      mala1.mostrar(localDate0);
      mala1.setDescricao("Mala:: {Artigo:: { C\u00F3digo de barras:  Id da transportadora:  Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n");
      mala0.preco_atual(localDate0);
      double double0 = mala1.preco_atual(localDate0);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Mala mala0 = new Mala();
      int int0 = (-2533);
      mala0.setEstado_uso((-2533));
      mala0.setValorizacao(0.0F);
      Artigo.criaCodigo();
      Mala mala1 = new Mala(mala0);
      mala1.getAno_colecao();
      mala1.equals(mala0);
      Mala mala2 = mala0.clone();
      Artigo.contador = (-2965L);
      mala1.setMaterial("A2");
      mala2.preco_atual((LocalDate) null);
      mala2.equals(mala1);
      mala2.equals(mala0);
      Artigo.setContador(985L);
      mala1.setPremium(true);
      mala1.setPremium(true);
      mala2.getAno_colecao();
      mala2.clone();
      mala0.clone();
      // Undeclared exception!
      try { 
        mala1.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.getDimensao();
      mala0.setPremium(true);
      Double double0 = new Double(2L);
      Long long0 = new Long(0L);
      Long.sum(2847L, (-3068));
      Long.getLong("u", 2847L);
      Mala mala1 = new Mala("hrv$R.Dh6='7@58o", "hrv$R.Dh6='7@58o", double0, true, 0, 1120, (Long) 3L, long0, (-3068), "-R C)RglQ,zw", (-15), false, 0.0F);
      LocalDate localDate0 = mala1.getData_venda();
      mala0.preco_atual(localDate0);
      // Undeclared exception!
      try { 
        mala0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Mala", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setAno_colecao(0);
      mala0.setPremium(true);
      boolean boolean0 = mala1.equals(mala0);
      assertTrue(mala0.isPremium());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double((-2847.376));
      Long long0 = new Long((-2121L));
      Mala mala0 = new Mala("projeto.Mala", "projeto.Mala", double0, false, (-1382), 1836, long0, long0, (-1382), "dfxh?*kyq`0", 1, false, 2335.43F);
      mala0.setPremium(false);
      assertEquals("dfxh?*kyq`0", mala0.getMaterial());
      assertEquals(1, mala0.getAno_colecao());
      assertEquals((-1382), mala0.getDimensao());
      assertFalse(mala0.isPremium());
      assertEquals(2335.43F, mala0.getValorizacao(), 0.01F);
  }
}
