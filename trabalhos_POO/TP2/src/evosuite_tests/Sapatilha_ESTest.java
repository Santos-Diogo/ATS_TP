/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 16:36:01 GMT 2024
 */

package projeto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Clock;
import java.time.LocalDate;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;
import projeto.Artigo;
import projeto.Sapatilha;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Sapatilha_ESTest extends Sapatilha_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double((-1610.497887795582));
      assertNotNull(double0);
      assertEquals((-1610.497887795582), (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, "xPa\"p{ik\"rFOK[,GX", double0, false, (-439), 0, long0, long0, (-439), true, "xPa\"p{ik\"rFOK[,GX", (-439), true, 0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertNull(sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getAnoColecao());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-439));
      assertNotNull(localDate0);
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertNull(sapatilha0.getDescricao());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A", sapatilha1.getCodigo());
      
      sapatilha1.setAnoColecao((-57));
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals((-57), sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A", sapatilha1.getCodigo());
      
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(boolean0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha1.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals((-57), sapatilha1.getAnoColecao());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A", sapatilha1.getCodigo());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      
      boolean boolean0 = sapatilha0.isPremium();
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      
      boolean boolean0 = sapatilha0.isAtacadores();
      assertEquals(2L, Artigo.contador);
      assertFalse(boolean0);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long((-2744L));
      assertNotNull(long0);
      assertEquals((-2744L), (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha(" }", (String) null, double0, true, (-1), (-1), long0, long0, 1, true, " }", (-1), true, (-2691.0));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-2744L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertNull(sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-2744L), sapatilha0.getIdVendedor());
      assertEquals(" }", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2691.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(1, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(" }", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getNovo());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals(1, int0);
      assertEquals((-2744L), sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertNull(sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-2744L), sapatilha0.getIdVendedor());
      assertEquals(" }", sapatilha0.getCor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-2691.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(1, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(" }", sapatilha0.getDescricao());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      
      sapatilha0.setDesconto(349.164);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(349.164, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      
      double double0 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals(349.164, double0, 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(349.164, sapatilha0.getDesconto(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      
      sapatilha0.setDesconto((-636L));
      assertEquals(2L, Artigo.contador);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-636.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      
      double double0 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals((-636.0), double0, 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-636.0), sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Double double0 = new Double(1812);
      assertNotNull(double0);
      assertEquals(1812.0, (double)double0, 0.01);
      
      Long long0 = new Long(1535);
      assertNotNull(long0);
      assertEquals(1535L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "S24E1deau;bVkIx", double0, true, (-409), 1812, long0, long0, 2147467699, false, (String) null, 10, true, 2147467699);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2147467699, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1535L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2.147467699E9, sapatilha0.getDesconto(), 0.01);
      assertNull(sapatilha0.getCor());
      assertEquals(10, sapatilha0.getAnoColecao());
      assertEquals((-409), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(1812, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("S24E1deau;bVkIx", sapatilha0.getMarca());
      assertEquals(1535L, sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(1812.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertNull(string0);
      assertEquals(2147467699, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      assertEquals(1535L, sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2.147467699E9, sapatilha0.getDesconto(), 0.01);
      assertNull(sapatilha0.getCor());
      assertEquals(10, sapatilha0.getAnoColecao());
      assertEquals((-409), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(1812, sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("S24E1deau;bVkIx", sapatilha0.getMarca());
      assertEquals(1535L, sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(1812.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      
      sapatilha0.setCor("@y[e");
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("@y[e", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
      assertEquals("@y[e", string0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("@y[e", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
      assertFalse(sapatilha0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals(0, int0);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Double double0 = new Double(1.0);
      assertNotNull(double0);
      assertEquals(1.0, (double)double0, 0.01);
      
      Long long0 = new Long((-1L));
      assertNotNull(long0);
      assertEquals((-1L), (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("`\"Py(yvK2vm=S?", "x#H_^]s?>[0", double0, true, 45, 45, long0, long0, 45, true, "`\"Py(yvK2vm=S?", 45, true, 0.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertTrue(sapatilha0.isPremium());
      assertEquals("x#H_^]s?>[0", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(45, sapatilha0.getN_utilizadores());
      assertEquals(45, sapatilha0.getAnoColecao());
      assertEquals(45, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("`\"Py(yvK2vm=S?", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(45, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("`\"Py(yvK2vm=S?", sapatilha0.getCor());
      assertTrue(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals(45, int0);
      assertTrue(sapatilha0.isPremium());
      assertEquals("x#H_^]s?>[0", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(45, sapatilha0.getN_utilizadores());
      assertEquals(45, sapatilha0.getAnoColecao());
      assertEquals(45, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("`\"Py(yvK2vm=S?", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(45, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("`\"Py(yvK2vm=S?", sapatilha0.getCor());
      assertTrue(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Double double0 = new Double((-2114.8270654));
      assertNotNull(double0);
      assertEquals((-2114.8270654), (double)double0, 0.01);
      
      Long long0 = new Long(1898);
      assertNotNull(long0);
      assertEquals(1898L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha(" Data da Cole\u00E7\u00E3o: ", "994uf37W=DHFj03>;", double0, true, 0, 1898, long0, long0, (-3622), true, " Pre\u00E7o atual: ", 0, true, 0.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(1898L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1898, sapatilha0.getN_utilizadores());
      assertEquals(1898L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(" Data da Cole\u00E7\u00E3o: ", sapatilha0.getDescricao());
      assertEquals((-2114.8270654), sapatilha0.getPreco_base(), 0.01);
      assertEquals("994uf37W=DHFj03>;", sapatilha0.getMarca());
      assertEquals(" Pre\u00E7o atual: ", sapatilha0.getCor());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-3622), sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.isPremium());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals(1898L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1898, sapatilha0.getN_utilizadores());
      assertEquals(1898L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(" Data da Cole\u00E7\u00E3o: ", sapatilha0.getDescricao());
      assertEquals((-2114.8270654), sapatilha0.getPreco_base(), 0.01);
      assertEquals("994uf37W=DHFj03>;", sapatilha0.getMarca());
      assertEquals(" Pre\u00E7o atual: ", sapatilha0.getCor());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-3622), sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.isPremium());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertTrue(sapatilha1.getDisponivel());
      assertTrue(sapatilha1.isAtacadores());
      assertTrue(sapatilha1.getNovo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(1898L, sapatilha1.getIdVendedor());
      assertEquals((-2114.8270654), sapatilha1.getPreco_base(), 0.01);
      assertEquals(" Data da Cole\u00E7\u00E3o: ", sapatilha1.getDescricao());
      assertEquals("A", sapatilha1.getCodigo());
      assertTrue(sapatilha1.isPremium());
      assertEquals("994uf37W=DHFj03>;", sapatilha1.getMarca());
      assertEquals(" Pre\u00E7o atual: ", sapatilha1.getCor());
      assertEquals(1898, sapatilha1.getN_utilizadores());
      assertEquals((-3622), sapatilha1.getTamanho());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(1898L, sapatilha1.getIdTransportadora());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Double double0 = new Double(1812);
      assertNotNull(double0);
      assertEquals(1812.0, (double)double0, 0.01);
      
      Long long0 = new Long(1535);
      assertNotNull(long0);
      assertEquals(1535L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "S24E1deau;bVkIx", double0, true, (-409), 1812, long0, long0, 2147467699, false, (String) null, 10, true, 2147467699);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(1812, sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(2147467699, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("S24E1deau;bVkIx", sapatilha0.getMarca());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals(1535L, sapatilha0.getIdTransportadora());
      assertEquals(10, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1812.0, sapatilha0.getPreco_base(), 0.01);
      assertNull(sapatilha0.getCor());
      assertEquals(1535L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2.147467699E9, sapatilha0.getDesconto(), 0.01);
      assertEquals((-409), sapatilha0.getEstado_uso());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals(1812, sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getContador());
      assertTrue(sapatilha0.getNovo());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(2147467699, sapatilha0.getTamanho());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("S24E1deau;bVkIx", sapatilha0.getMarca());
      assertEquals("", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals(1535L, sapatilha0.getIdTransportadora());
      assertEquals(10, sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1812.0, sapatilha0.getPreco_base(), 0.01);
      assertNull(sapatilha0.getCor());
      assertEquals(1535L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2.147467699E9, sapatilha0.getDesconto(), 0.01);
      assertEquals((-409), sapatilha0.getEstado_uso());
      assertTrue(sapatilha1.getNovo());
      assertEquals(1535L, sapatilha1.getIdVendedor());
      assertEquals((-409), sapatilha1.getEstado_uso());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(2147467699, sapatilha1.getTamanho());
      assertEquals(10, sapatilha1.getAnoColecao());
      assertEquals(2.147467699E9, sapatilha1.getDesconto(), 0.01);
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(1812, sapatilha1.getN_utilizadores());
      assertEquals(1812.0, sapatilha1.getPreco_base(), 0.01);
      assertNull(sapatilha1.getCor());
      assertTrue(sapatilha1.isPremium());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(1535L, sapatilha1.getIdTransportadora());
      assertTrue(sapatilha1.getDisponivel());
      assertEquals("S24E1deau;bVkIx", sapatilha1.getMarca());
      assertEquals("", sapatilha1.getDescricao());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      
      Artigo.contador = 0L;
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(0L, Artigo.contador);
      assertEquals(0L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha1.isAtacadores());
      assertEquals("A", sapatilha1.getCodigo());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getNovo());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(0L, sapatilha1.getContador());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1L), sapatilha1.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      
      Artigo.setContador((-297L));
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals((-297L), Artigo.contador);
      assertEquals((-297L), Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-297L), sapatilha0.getContador());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha1.getNovo());
      assertEquals((-297L), sapatilha1.getContador());
      assertEquals("", sapatilha1.getCor());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertFalse(sapatilha1.isPremium());
      assertEquals("Artigo invalido", sapatilha1.getDescricao());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-3265.675547551));
      assertNotNull(double0);
      assertEquals((-3265.675547551), (double)double0, 0.01);
      
      Long long0 = Long.getLong(" Atacadores: ", (long) 2515);
      assertNotNull(long0);
      assertEquals(2515L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha(".6", ".6", double0, false, 2515, 2515, long0, long0, 0, false, " Atacadores: ", 45, false, (-3265.675547551));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2515, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(2515L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(".6", sapatilha0.getMarca());
      assertEquals((-3265.675547551), sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(".6", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2515, sapatilha0.getEstado_uso());
      assertEquals(" Atacadores: ", sapatilha0.getCor());
      assertEquals((-3265.675547551), sapatilha0.getDesconto(), 0.01);
      assertEquals(45, sapatilha0.getAnoColecao());
      assertEquals(2515L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals(2515, sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(2515L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(".6", sapatilha0.getMarca());
      assertEquals((-3265.675547551), sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(".6", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2515, sapatilha0.getEstado_uso());
      assertEquals(" Atacadores: ", sapatilha0.getCor());
      assertEquals((-3265.675547551), sapatilha0.getDesconto(), 0.01);
      assertEquals(45, sapatilha0.getAnoColecao());
      assertEquals(2515L, sapatilha0.getIdTransportadora());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2515L, sapatilha1.getIdTransportadora());
      assertEquals(2515, sapatilha1.getEstado_uso());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals(" Atacadores: ", sapatilha1.getCor());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals(2515, sapatilha1.getN_utilizadores());
      assertEquals(45, sapatilha1.getAnoColecao());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals((-3265.675547551), sapatilha1.getDesconto(), 0.01);
      assertEquals((-3265.675547551), sapatilha1.getPreco_base(), 0.01);
      assertFalse(sapatilha1.isPremium());
      assertEquals(".6", sapatilha1.getMarca());
      assertEquals(".6", sapatilha1.getDescricao());
      assertFalse(sapatilha1.getNovo());
      assertEquals(2515L, sapatilha1.getIdVendedor());
      assertFalse(sapatilha1.isAtacadores());
      assertTrue(sapatilha1.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double((-1610.497887795582));
      assertNotNull(double0);
      assertEquals((-1610.497887795582), (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, "xPa\"p{ik\"rFOK[,GX", double0, false, (-439), 0, long0, long0, (-439), true, "xPa\"p{ik\"rFOK[,GX", (-439), true, 0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertNull(sapatilha0.getDescricao());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertNull(sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals((-439), sapatilha1.getTamanho());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(0L, sapatilha1.getIdTransportadora());
      assertEquals(0, sapatilha1.getN_utilizadores());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha1.getMarca());
      assertEquals(0L, sapatilha1.getIdVendedor());
      assertNull(sapatilha1.getDescricao());
      assertEquals((-439), sapatilha1.getEstado_uso());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertEquals((-1610.497887795582), sapatilha1.getPreco_base(), 0.01);
      assertTrue(sapatilha1.isAtacadores());
      assertEquals((-439), sapatilha1.getAnoColecao());
      assertTrue(sapatilha1.getDisponivel());
      assertFalse(sapatilha1.getNovo());
      assertTrue(sapatilha1.isPremium());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha1.getCor());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      
      sapatilha0.setData_venda((LocalDate) null);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isPremium());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      
      // Undeclared exception!
      try { 
        sapatilha0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      
      sapatilha0.setPremium(true);
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      
      // Undeclared exception!
      try { 
        sapatilha0.preco_atual((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Sapatilha", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      
      sapatilha0.setDescricao((String) null);
      assertEquals(2L, Artigo.contador);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertNull(sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      
      Sapatilha sapatilha1 = sapatilha0.clone();
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha1);
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertNull(sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha1.getCor());
      assertEquals("A1", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      assertFalse(sapatilha1.isAtacadores());
      assertFalse(sapatilha1.getDisponivel());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertEquals((-1L), sapatilha1.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha1.getMarca());
      assertEquals((-1), sapatilha1.getN_utilizadores());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertNull(sapatilha1.getDescricao());
      assertFalse(sapatilha1.isPremium());
      assertEquals((-1L), sapatilha1.getIdVendedor());
      assertEquals(2L, sapatilha1.getContador());
      assertEquals(0.0, sapatilha1.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha1.getEstado_uso());
      assertEquals(0, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      
      // Undeclared exception!
      try { 
        sapatilha1.equals(sapatilha0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Sapatilha sapatilha0 = null;
      try {
        sapatilha0 = new Sapatilha((Sapatilha) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-3538.78586));
      assertNotNull(double0);
      assertEquals((-3538.78586), (double)double0, 0.01);
      
      Long long0 = new Long(0);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Sapatilha sapatilha0 = null;
      try {
        sapatilha0 = new Sapatilha("", "", double0, true, 0, 0, (Long) null, long0, 0, false, "U", 0, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Artigo", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double(2686.8662);
      assertNotNull(double0);
      assertEquals(2686.8662, (double)double0, 0.01);
      
      Long long0 = new Long(3020);
      assertNotNull(long0);
      assertEquals(3020L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, "", double0, true, 3020, 3020, long0, long0, 3020, true, "", 3020, false, 100.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(3020, sapatilha0.getN_utilizadores());
      assertEquals(3020L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      assertEquals(100.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertNull(sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2686.8662, sapatilha0.getPreco_base(), 0.01);
      assertEquals(3020, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(3020, sapatilha0.getEstado_uso());
      assertEquals(3020L, sapatilha0.getIdTransportadora());
      assertEquals(3020, sapatilha0.getAnoColecao());
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      assertNotNull(localDate0);
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(3020, sapatilha0.getN_utilizadores());
      assertEquals(3020L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.getNovo());
      assertEquals(100.0, sapatilha0.getDesconto(), 0.01);
      assertTrue(sapatilha0.getDisponivel());
      assertNull(sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2686.8662, sapatilha0.getPreco_base(), 0.01);
      assertEquals(3020, sapatilha0.getTamanho());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(3020, sapatilha0.getEstado_uso());
      assertEquals(3020L, sapatilha0.getIdTransportadora());
      assertEquals(3020, sapatilha0.getAnoColecao());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Double double0 = new Double((-3265.675547551));
      assertNotNull(double0);
      assertEquals((-3265.675547551), (double)double0, 0.01);
      
      Long long0 = Long.getLong(" Atacadores: ", (long) 2515);
      assertNotNull(long0);
      assertEquals(2515L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha(".6", ".6", double0, false, 2515, 2515, long0, long0, 0, false, " Atacadores: ", 45, false, (-3265.675547551));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals(".6", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(".6", sapatilha0.getMarca());
      assertEquals((-3265.675547551), sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(45, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(" Atacadores: ", sapatilha0.getCor());
      assertEquals(2515L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2515, sapatilha0.getN_utilizadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2515L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(2515, sapatilha0.getEstado_uso());
      assertEquals((-3265.675547551), sapatilha0.getDesconto(), 0.01);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2515);
      assertNotNull(localDate0);
      
      double double1 = sapatilha0.preco_atual(localDate0);
      assertEquals(2L, Artigo.contador);
      assertEquals(0.01, double1, 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertEquals(".6", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals(".6", sapatilha0.getMarca());
      assertEquals((-3265.675547551), sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals(45, sapatilha0.getAnoColecao());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(" Atacadores: ", sapatilha0.getCor());
      assertEquals(2515L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2515, sapatilha0.getN_utilizadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2515L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(2515, sapatilha0.getEstado_uso());
      assertEquals((-3265.675547551), sapatilha0.getDesconto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-1610.497887795582));
      assertNotNull(double0);
      assertEquals((-1610.497887795582), (double)double0, 0.01);
      
      Long long0 = new Long(0L);
      assertNotNull(long0);
      assertEquals(0L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha((String) null, "xPa\"p{ik\"rFOK[,GX", double0, false, (-439), 0, long0, long0, (-439), true, "xPa\"p{ik\"rFOK[,GX", (-439), true, 0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-439), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertNull(sapatilha0.getDescricao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      
      int int0 = sapatilha0.getTamanho();
      assertEquals(2L, Artigo.contador);
      assertEquals((-439), int0);
      assertEquals((-439), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-439), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1610.497887795582), sapatilha0.getPreco_base(), 0.01);
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals((-439), sapatilha0.getTamanho());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("xPa\"p{ik\"rFOK[,GX", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertNull(sapatilha0.getDescricao());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double((-1.0));
      assertNotNull(double0);
      assertEquals((-1.0), (double)double0, 0.01);
      
      Long long0 = new Long((-266L));
      assertNotNull(long0);
      assertEquals((-266L), (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("Y", "Y", double0, true, (-3433), (-1268), long0, long0, (-84), true, "Y", (-4030), true, (-4030));
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Y", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-4030.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-266L), sapatilha0.getIdTransportadora());
      assertEquals((-4030), sapatilha0.getAnoColecao());
      assertEquals("Y", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1268), sapatilha0.getN_utilizadores());
      assertEquals("Y", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-266L), sapatilha0.getIdVendedor());
      assertEquals((-3433), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1.0), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-84), sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
      
      int int0 = sapatilha0.getAnoColecao();
      assertEquals(2L, Artigo.contador);
      assertEquals((-4030), int0);
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Y", sapatilha0.getDescricao());
      assertTrue(sapatilha0.isPremium());
      assertEquals((-4030.0), sapatilha0.getDesconto(), 0.01);
      assertEquals((-266L), sapatilha0.getIdTransportadora());
      assertEquals((-4030), sapatilha0.getAnoColecao());
      assertEquals("Y", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1268), sapatilha0.getN_utilizadores());
      assertEquals("Y", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals((-266L), sapatilha0.getIdVendedor());
      assertEquals((-3433), sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-1.0), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-84), sapatilha0.getTamanho());
      assertTrue(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(516);
      assertNotNull(long0);
      assertEquals(516L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1326, 516, long0, long0, 516, true, "", 0, true, 0.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertEquals(516L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(516, sapatilha0.getTamanho());
      
      boolean boolean0 = sapatilha0.isPremium();
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertEquals(516L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(516, sapatilha0.getTamanho());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(516);
      assertNotNull(long0);
      assertEquals(516L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1326, 516, long0, long0, 516, true, "", 0, true, 0.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertEquals(516, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(516L, sapatilha0.getIdVendedor());
      
      double double1 = sapatilha0.getDesconto();
      assertEquals(2L, Artigo.contador);
      assertEquals(0.0, double1, 0.01);
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.isPremium());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertEquals(516, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(516L, sapatilha0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      
      String string0 = sapatilha0.getCor();
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      
      String string0 = sapatilha0.toString();
      assertEquals(2L, Artigo.contador);
      assertNotNull(string0);
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0}", string0);
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertNotNull(double0);
      assertEquals(0.0, (double)double0, 0.01);
      
      Long long0 = new Long(516);
      assertNotNull(long0);
      assertEquals(516L, (long)long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1326, 516, long0, long0, 516, true, "", 0, true, 0.0);
      assertEquals(2L, Artigo.contador);
      assertNotNull(sapatilha0);
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals(516L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(516, sapatilha0.getTamanho());
      
      boolean boolean0 = sapatilha0.isAtacadores();
      assertEquals(2L, Artigo.contador);
      assertTrue(boolean0);
      assertEquals(1326, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals(516L, sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(516, sapatilha0.getN_utilizadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(516L, sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("", sapatilha0.getMarca());
      assertTrue(sapatilha0.getDisponivel());
      assertTrue(sapatilha0.isPremium());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(516, sapatilha0.getTamanho());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setTamanho(454);
      sapatilha0.setNovo(true);
      sapatilha0.mostrar((LocalDate) null);
      assertEquals(454, sapatilha0.getTamanho());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      sapatilha0.setNovo(true);
      double double0 = sapatilha0.preco_atual(localDate0);
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0.01, double0, 0.01);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.isPremium());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Double double0 = new Double(349.6820277);
      Long long0 = new Long((-2136714460));
      Sapatilha sapatilha0 = new Sapatilha((String) null, "}", double0, true, (-2136714460), (-2736), long0, long0, 10, true, "A", 6, true, 349.6820277);
      ZoneOffset zoneOffset0 = ZoneOffset.ofTotalSeconds((-1535));
      Clock clock0 = MockClock.tickSeconds(zoneOffset0);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      sapatilha0.setData_venda(localDate0);
      double double1 = sapatilha0.preco_atual(localDate0);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCor());
      assertEquals(70565.83318986, double1, 0.01);
      assertEquals(349.6820277, sapatilha0.getDesconto(), 0.01);
      assertEquals(10, sapatilha0.getTamanho());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha0.setDesconto(2L);
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertEquals(2.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      sapatilha1.setPremium(true);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
      assertTrue(sapatilha1.isPremium());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals("", sapatilha1.getCor());
      
      sapatilha1.setCor("A");
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = sapatilha0.clone();
      sapatilha1.setAtacadores(true);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertTrue(sapatilha1.isAtacadores());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      boolean boolean0 = sapatilha1.equals(sapatilha0);
      assertTrue(sapatilha0.equals((Object)sapatilha1));
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha1.getTamanho());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = new Sapatilha();
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertEquals(0, sapatilha1.getAnoColecao());
      assertFalse(sapatilha1.isAtacadores());
      assertEquals(0, sapatilha1.getTamanho());
      assertFalse(sapatilha1.isPremium());
      assertFalse(boolean0);
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      boolean boolean0 = sapatilha0.equals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0} Pre\u00E7o atual: 0.01\u20AC \n");
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(boolean0);
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      boolean boolean0 = sapatilha0.equals((Object) null);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertFalse(sapatilha0.isPremium());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(boolean0);
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(516);
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1326, 516, long0, long0, 516, true, "", 0, true, 0.0);
      boolean boolean0 = sapatilha0.equals(sapatilha0);
      assertTrue(boolean0);
      assertTrue(sapatilha0.isPremium());
      assertEquals(516, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertTrue(sapatilha0.isAtacadores());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Sapatilha sapatilha1 = sapatilha0.clone();
      sapatilha0.setTamanho(10);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertEquals(10, sapatilha0.getTamanho());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setTamanho(4057);
      Sapatilha sapatilha1 = sapatilha0.clone();
      sapatilha0.setTamanho(10);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertEquals(10, sapatilha0.getTamanho());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(516);
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1326, 516, long0, long0, 516, true, "", 0, true, 0.0);
      Sapatilha sapatilha1 = new Sapatilha(sapatilha0);
      assertEquals(0, sapatilha1.getAnoColecao());
      
      sapatilha1.setAnoColecao(1326);
      boolean boolean0 = sapatilha0.equals(sapatilha1);
      assertFalse(boolean0);
  }
}
