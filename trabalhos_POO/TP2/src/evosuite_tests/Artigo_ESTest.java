/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 16:36:38 GMT 2024
 */

package projeto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;
import projeto.Artigo;
import projeto.Mala;
import projeto.Padrao;
import projeto.Sapatilha;
import projeto.Tamanho;
import projeto.Tshirt;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt1.setTransportadora(0L);
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals(0L, tshirt1.getIdTransportadora());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals(0L, tshirt1.getIdTransportadora());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(2L, tshirt1.getContador());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertFalse(tshirt1.getNovo());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt1.setVendedor(2L);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals(2L, tshirt1.getContador());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertNull(tshirt1.getTamanho());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(2L, tshirt1.getContador());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertNull(tshirt1.getTamanho());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt0.setEstado_uso(10);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertEquals(10, tshirt0.getEstado_uso());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertNotSame(tshirt0, tshirt1);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertEquals(10, tshirt0.getEstado_uso());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals(2L, tshirt1.getContador());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertFalse(tshirt1.getNovo());
      assertNull(tshirt1.getPadrao());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertNull(tshirt1.getTamanho());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = sapatilha0.toString();
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0}", string0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = MockLocalDate.now();
      assertNotNull(localDate0);
      
      double double0 = sapatilha0.preco_atual(localDate0);
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0.01, double0, 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      double double0 = sapatilha0.getPreco_base();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("", sapatilha0.getCor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      sapatilha0.setPreco_base((-5136.6));
      assertFalse(sapatilha0.getNovo());
      assertEquals((-5136.6), sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      
      double double0 = sapatilha0.getPreco_base();
      assertFalse(sapatilha0.getNovo());
      assertEquals((-5136.6), sapatilha0.getPreco_base(), 0.01);
      assertEquals("", sapatilha0.getCor());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-5136.6), double0, 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = sapatilha0.getNovo();
      assertFalse(sapatilha0.isAtacadores());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A", sapatilha0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertFalse(sapatilha0.isPremium());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt((String) null, ">h^_PJ=,7$9", (-2446.1777608), false, (-1042), 0, (Long) 4L, (Long) 4L, tamanho0, padrao0);
      assertEquals(4L, tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getDescricao());
      assertEquals((-1042), tshirt0.getEstado_uso());
      assertTrue(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(">h^_PJ=,7$9", tshirt0.getMarca());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-2446.1777608), tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(4L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      int int0 = tshirt0.getN_utilizadores();
      assertEquals(4L, tshirt0.getIdTransportadora());
      assertEquals(2L, tshirt0.getContador());
      assertNull(tshirt0.getDescricao());
      assertEquals((-1042), tshirt0.getEstado_uso());
      assertTrue(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(">h^_PJ=,7$9", tshirt0.getMarca());
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-2446.1777608), tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(4L, tshirt0.getIdVendedor());
      assertEquals(Tamanho.L, tshirt0.getTamanho());
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt(".KI71wFm%d+I{", "", 3L, true, 45, 45, (Long) sapatilha0.contador, (Long) 3L, tamanho0, padrao0);
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isPremium());
      assertEquals(3L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("", tshirt0.getMarca());
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertEquals(2L, tshirt0.getIdTransportadora());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertTrue(tshirt0.getNovo());
      assertEquals(3L, tshirt0.getIdVendedor());
      assertEquals(3L, tshirt0.getContador());
      assertEquals(45, tshirt0.getEstado_uso());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(".KI71wFm%d+I{", tshirt0.getDescricao());
      assertEquals(45, tshirt0.getN_utilizadores());
      assertNotNull(tshirt0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      int int0 = tshirt0.getN_utilizadores();
      assertFalse(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isPremium());
      assertEquals(3L, sapatilha0.getContador());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertFalse(sapatilha0.isAtacadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("", sapatilha0.getCor());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("", tshirt0.getMarca());
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertTrue(tshirt0.getDisponivel());
      assertEquals("A2", tshirt0.getCodigo_barras());
      assertEquals(2L, tshirt0.getIdTransportadora());
      assertEquals(3.0, tshirt0.getPreco_base(), 0.01);
      assertTrue(tshirt0.getNovo());
      assertEquals(3L, tshirt0.getIdVendedor());
      assertEquals(3L, tshirt0.getContador());
      assertEquals(45, tshirt0.getEstado_uso());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(".KI71wFm%d+I{", tshirt0.getDescricao());
      assertEquals(45, tshirt0.getN_utilizadores());
      assertEquals(45, int0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Double double0 = new Double(100.0);
      assertEquals(100.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala(" Marca: ", (String) null, double0, true, 0, 0, long0, long0, 0, "", (-475), true, (-2295.5344F));
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals((-2295.5344F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getMarca());
      assertEquals((-475), mala0.getAno_colecao());
      assertEquals(" Marca: ", mala0.getDescricao());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(100.0, mala0.getPreco_base(), 0.01);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getMarca();
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getN_utilizadores());
      assertEquals((-2295.5344F), mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals("A", mala0.getCodigo());
      assertNull(mala0.getMarca());
      assertEquals((-475), mala0.getAno_colecao());
      assertEquals(" Marca: ", mala0.getDescricao());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(100.0, mala0.getPreco_base(), 0.01);
      assertNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getMarca();
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", string0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(662);
      assertEquals(662L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("", "", 1479.8324395870222, true, 662, 662, long0, long0, tamanho0, padrao0);
      assertEquals(662, tshirt0.getEstado_uso());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("", tshirt0.getMarca());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(662, tshirt0.getN_utilizadores());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(662L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("", tshirt0.getDescricao());
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertEquals(1479.8324395870222, tshirt0.getPreco_base(), 0.01);
      assertEquals(662L, tshirt0.getIdVendedor());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      long long1 = tshirt0.getIdVendedor();
      assertEquals(662, tshirt0.getEstado_uso());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("", tshirt0.getMarca());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(662, tshirt0.getN_utilizadores());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(662L, tshirt0.getIdTransportadora());
      assertTrue(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertEquals("", tshirt0.getDescricao());
      assertEquals(Tamanho.M, tshirt0.getTamanho());
      assertEquals(1479.8324395870222, tshirt0.getPreco_base(), 0.01);
      assertEquals(662L, tshirt0.getIdVendedor());
      assertEquals(662L, long1);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      long long0 = mala0.getIdVendedor();
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals("A", mala0.getCodigo());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), long0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      sapatilha0.setTransportadora(1L);
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(1L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(2L, Artigo.contador);
      
      long long0 = sapatilha0.getIdTransportadora();
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(1L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertFalse(sapatilha0.isPremium());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals(0, sapatilha0.getTamanho());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("", sapatilha0.getCor());
      assertEquals(1L, long0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertFalse(tshirt0.getDisponivel());
      assertNull(tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      long long0 = tshirt0.getIdTransportadora();
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertFalse(tshirt0.getNovo());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertFalse(tshirt0.getDisponivel());
      assertNull(tshirt0.getPadrao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), long0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long(3241);
      assertEquals(3241L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("((@JVa'QF^*i^W0Ral_", " Padr\u00E3o: ", 0.0, false, 3241, 3241, long0, long0, tamanho0, padrao0);
      assertEquals(3241, tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertFalse(tshirt0.getNovo());
      assertEquals(3241L, tshirt0.getIdVendedor());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(" Padr\u00E3o: ", tshirt0.getMarca());
      assertEquals("((@JVa'QF^*i^W0Ral_", tshirt0.getDescricao());
      assertEquals(3241, tshirt0.getN_utilizadores());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(3241L, tshirt0.getIdTransportadora());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      int int0 = tshirt0.getEstado_uso();
      assertEquals(3241, tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertFalse(tshirt0.getNovo());
      assertEquals(3241L, tshirt0.getIdVendedor());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(" Padr\u00E3o: ", tshirt0.getMarca());
      assertEquals("((@JVa'QF^*i^W0Ral_", tshirt0.getDescricao());
      assertEquals(3241, tshirt0.getN_utilizadores());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals(3241L, tshirt0.getIdTransportadora());
      assertEquals(3241, int0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getEstado_uso();
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0, mala0.getDimensao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals((-1), int0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(4);
      assertEquals(4L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala(",U0\"uW", ",U0\"uW", double0, false, 4, (-1286), long0, long0, 2262, ",U0\"uW", 4, false, 0.0F);
      assertFalse(mala0.getNovo());
      assertEquals(4L, mala0.getIdVendedor());
      assertEquals(",U0\"uW", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals(4L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2262, mala0.getDimensao());
      assertEquals((-1286), mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals(4, mala0.getAno_colecao());
      assertEquals(",U0\"uW", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(",U0\"uW", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(4, mala0.getEstado_uso());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.getDisponivel();
      assertFalse(mala0.getNovo());
      assertEquals(4L, mala0.getIdVendedor());
      assertEquals(",U0\"uW", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals(4L, mala0.getIdTransportadora());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2262, mala0.getDimensao());
      assertEquals((-1286), mala0.getN_utilizadores());
      assertTrue(mala0.getDisponivel());
      assertEquals(4, mala0.getAno_colecao());
      assertEquals(",U0\"uW", mala0.getMaterial());
      assertEquals("A", mala0.getCodigo());
      assertEquals(",U0\"uW", mala0.getDescricao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(4, mala0.getEstado_uso());
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long((-1299L));
      assertEquals((-1299L), (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt((String) null, "", (-1495.03556), false, 107, 107, long0, long0, tamanho0, padrao0);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("", tshirt0.getMarca());
      assertEquals((-1299L), tshirt0.getIdVendedor());
      assertEquals((-1495.03556), tshirt0.getPreco_base(), 0.01);
      assertEquals((-1299L), tshirt0.getIdTransportadora());
      assertEquals(107, tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(107, tshirt0.getEstado_uso());
      assertNull(tshirt0.getDescricao());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = tshirt0.getDescricao();
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("", tshirt0.getMarca());
      assertEquals((-1299L), tshirt0.getIdVendedor());
      assertEquals((-1495.03556), tshirt0.getPreco_base(), 0.01);
      assertEquals((-1299L), tshirt0.getIdTransportadora());
      assertEquals(107, tshirt0.getN_utilizadores());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(107, tshirt0.getEstado_uso());
      assertNull(tshirt0.getDescricao());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(Tamanho.S, tshirt0.getTamanho());
      assertEquals(Padrao.riscas, tshirt0.getPadrao());
      assertNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double((-548.18917829));
      assertEquals((-548.18917829), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("", " }", double0, true, 0, 1, long0, long0, (-527), " }", 0, true, 623.8582F);
      assertEquals(" }", mala0.getMarca());
      assertEquals((-548.18917829), mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getDisponivel());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(" }", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-527), mala0.getDimensao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(623.8582F, mala0.getValorizacao(), 0.01F);
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getDescricao();
      assertEquals(" }", mala0.getMarca());
      assertEquals((-548.18917829), mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getDisponivel());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(" }", mala0.getMaterial());
      assertEquals(0, mala0.getEstado_uso());
      assertEquals((-527), mala0.getDimensao());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(623.8582F, mala0.getValorizacao(), 0.01F);
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Artigo.setContador((-603));
      long long0 = Artigo.getContador();
      assertEquals((-603L), long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("!Li1Gb#BAzUW~<2'!3", "9k5yh'9f'l8~wIk", double0, false, 10, 2147483645, long0, long0, 2147483645, "!Li1Gb#BAzUW~<2'!3", 2147483645, true, (-1L));
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getDisponivel());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1L, mala0.getIdVendedor());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala0);
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getDisponivel());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(1L, mala0.getIdVendedor());
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long(2234);
      assertEquals(2234L, (long)long0);
      assertNotNull(long0);
      
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("@_C)", "f.0nf", 1976.1, true, 2234, 2234, long0, long0, tamanho0, padrao0);
      assertEquals(2L, tshirt0.getContador());
      assertEquals("f.0nf", tshirt0.getMarca());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertEquals(2234, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2234L, tshirt0.getIdTransportadora());
      assertEquals(1976.1, tshirt0.getPreco_base(), 0.01);
      assertTrue(tshirt0.getNovo());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(2234, tshirt0.getEstado_uso());
      assertEquals("@_C)", tshirt0.getDescricao());
      assertEquals(2234L, tshirt0.getIdVendedor());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertEquals(2L, tshirt0.getContador());
      assertEquals("f.0nf", tshirt0.getMarca());
      assertEquals(Tamanho.XL, tshirt0.getTamanho());
      assertEquals(2234, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2234L, tshirt0.getIdTransportadora());
      assertEquals(1976.1, tshirt0.getPreco_base(), 0.01);
      assertTrue(tshirt0.getNovo());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(2234, tshirt0.getEstado_uso());
      assertEquals("@_C)", tshirt0.getDescricao());
      assertEquals(2234L, tshirt0.getIdVendedor());
      assertEquals(Padrao.liso, tshirt0.getPadrao());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt1.getPadrao());
      assertTrue(tshirt1.getDisponivel());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2234L, tshirt1.getIdTransportadora());
      assertTrue(tshirt1.getNovo());
      assertEquals(1976.1, tshirt1.getPreco_base(), 0.01);
      assertEquals(2234, tshirt1.getN_utilizadores());
      assertEquals(2234L, tshirt1.getIdVendedor());
      assertEquals("@_C)", tshirt1.getDescricao());
      assertEquals("f.0nf", tshirt1.getMarca());
      assertEquals(Tamanho.XL, tshirt1.getTamanho());
      assertEquals(2234, tshirt1.getEstado_uso());
      assertEquals(2L, tshirt1.getContador());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertNotNull(tshirt1);
      assertTrue(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Double double0 = new Double((-345.0));
      assertEquals((-345.0), (double)double0, 0.01);
      assertNotNull(double0);
      
      Sapatilha sapatilha0 = new Sapatilha(" Material: ", "$VALUES", double0, false, 1145, 0, (Long) tshirt0.contador, (Long) tshirt0.contador, 1145, true, "A", (-1), true, 0.0);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCor());
      assertEquals((-345.0), sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(" Material: ", sapatilha0.getDescricao());
      assertEquals(1145, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(1145, sapatilha0.getTamanho());
      assertEquals("$VALUES", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(3L, sapatilha0.getContador());
      assertNotNull(sapatilha0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      Sapatilha sapatilha1 = (Sapatilha)sapatilha0.clone();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(3L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(sapatilha0.getNovo());
      assertEquals(2L, sapatilha0.getIdTransportadora());
      assertEquals((-1), sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(2L, sapatilha0.getIdVendedor());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCor());
      assertEquals((-345.0), sapatilha0.getPreco_base(), 0.01);
      assertTrue(sapatilha0.isAtacadores());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(" Material: ", sapatilha0.getDescricao());
      assertEquals(1145, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.isPremium());
      assertEquals(1145, sapatilha0.getTamanho());
      assertEquals("$VALUES", sapatilha0.getMarca());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(3L, sapatilha0.getContador());
      assertTrue(sapatilha1.isPremium());
      assertEquals(0.0, sapatilha1.getDesconto(), 0.01);
      assertEquals(2L, sapatilha1.getIdTransportadora());
      assertEquals("$VALUES", sapatilha1.getMarca());
      assertEquals(0, sapatilha1.getN_utilizadores());
      assertEquals((-1), sapatilha1.getAnoColecao());
      assertEquals(2L, sapatilha1.getIdVendedor());
      assertEquals(1145, sapatilha1.getEstado_uso());
      assertEquals(" Material: ", sapatilha1.getDescricao());
      assertEquals(3L, sapatilha1.getContador());
      assertTrue(sapatilha1.getDisponivel());
      assertEquals("A2", sapatilha1.getCodigo_barras());
      assertFalse(sapatilha1.getNovo());
      assertEquals(1145, sapatilha1.getTamanho());
      assertEquals("A", sapatilha1.getCodigo());
      assertEquals((-345.0), sapatilha1.getPreco_base(), 0.01);
      assertEquals("A", sapatilha1.getCor());
      assertTrue(sapatilha1.isAtacadores());
      assertNotSame(sapatilha0, sapatilha1);
      assertNotSame(sapatilha1, sapatilha0);
      assertNotNull(sapatilha1);
      assertTrue(sapatilha1.equals((Object)sapatilha0));
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Double double0 = new Double((-548.18917829));
      assertEquals((-548.18917829), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("", " }", double0, true, 0, 1, long0, long0, (-527), " }", 0, true, 623.8582F);
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(" }", mala0.getMaterial());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getDisponivel());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals((-548.18917829), mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" }", mala0.getMarca());
      assertEquals((-527), mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(623.8582F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = (Mala)mala0.clone();
      assertEquals(1, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(" }", mala0.getMaterial());
      assertTrue(mala0.getNovo());
      assertEquals(2L, mala0.getContador());
      assertEquals("", mala0.getDescricao());
      assertEquals(0, mala0.getEstado_uso());
      assertTrue(mala0.getDisponivel());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals((-548.18917829), mala0.getPreco_base(), 0.01);
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(" }", mala0.getMarca());
      assertEquals((-527), mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(623.8582F, mala0.getValorizacao(), 0.01F);
      assertEquals("A", mala0.getCodigo());
      assertEquals(" }", mala1.getMaterial());
      assertEquals(1L, mala1.getIdVendedor());
      assertEquals(1, mala1.getN_utilizadores());
      assertEquals(623.8582F, mala1.getValorizacao(), 0.01F);
      assertEquals(1L, mala1.getIdTransportadora());
      assertEquals(0, mala1.getEstado_uso());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(2L, mala1.getContador());
      assertEquals("A", mala1.getCodigo());
      assertEquals((-548.18917829), mala1.getPreco_base(), 0.01);
      assertTrue(mala1.isPremium());
      assertTrue(mala1.getDisponivel());
      assertEquals("", mala1.getDescricao());
      assertEquals(" }", mala1.getMarca());
      assertTrue(mala1.getNovo());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals((-527), mala1.getDimensao());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Double double0 = new Double((-1978.3));
      assertEquals((-1978.3), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("A1", "A1", double0, true, 259, 259, long0, long0, 259, "A1", 683, true, 571.0F);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getMaterial());
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(259, mala0.getDimensao());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A1", mala0.getDescricao());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = (Mala)mala0.clone();
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getMaterial());
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals(0L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertTrue(mala0.getNovo());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getMarca());
      assertEquals(2L, mala0.getContador());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(259, mala0.getDimensao());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A1", mala0.getDescricao());
      assertEquals("A", mala1.getCodigo());
      assertEquals("A1", mala1.getMaterial());
      assertEquals((-1978.3), mala1.getPreco_base(), 0.01);
      assertEquals(259, mala1.getDimensao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertEquals(259, mala1.getEstado_uso());
      assertEquals(683, mala1.getAno_colecao());
      assertEquals(0L, mala1.getIdVendedor());
      assertEquals("A1", mala1.getDescricao());
      assertEquals("A1", mala1.getMarca());
      assertEquals(259, mala1.getN_utilizadores());
      assertEquals(2L, mala1.getContador());
      assertEquals(0L, mala1.getIdTransportadora());
      assertTrue(mala1.isPremium());
      assertEquals(571.0F, mala1.getValorizacao(), 0.01F);
      assertTrue(mala1.getNovo());
      assertTrue(mala1.getDisponivel());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertNotNull(mala1);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getTamanho());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.setContador((-1L));
      Tshirt tshirt1 = (Tshirt)tshirt0.clone();
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getTamanho());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertFalse(tshirt1.getNovo());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt1.getContador());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertNull(tshirt1.getTamanho());
      assertNull(tshirt1.getPadrao());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertNotNull(tshirt1);
      assertEquals((-1L), Artigo.contador);
      assertEquals((-1L), Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals(2L, tshirt0.getContador());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getPadrao());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getTamanho());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertFalse(tshirt0.getDisponivel());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = MockLocalDate.ofEpochDay(3L);
      assertNotNull(localDate0);
      
      // Undeclared exception!
      try { 
        tshirt0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertFalse(tshirt0.getNovo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNull(tshirt0.getPadrao());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1), 2);
      assertNotNull(localDate0);
      
      // Undeclared exception!
      try { 
        tshirt0.mostrar(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("blXpcTM:Z16<", ";p7=Y3{bCX;5)J-OY", double0, false, 0, 0, long0, long0, 3760, false, "25^{Qn/N!/Ig/~", 3760, false, (-1.0));
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(3760, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1.0), sapatilha0.getDesconto(), 0.01);
      assertEquals("25^{Qn/N!/Ig/~", sapatilha0.getCor());
      assertEquals("blXpcTM:Z16<", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(3760, sapatilha0.getAnoColecao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(";p7=Y3{bCX;5)J-OY", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      int int0 = sapatilha0.getEstado_uso();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals(3760, sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1.0), sapatilha0.getDesconto(), 0.01);
      assertEquals("25^{Qn/N!/Ig/~", sapatilha0.getCor());
      assertEquals("blXpcTM:Z16<", sapatilha0.getDescricao());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(3760, sapatilha0.getAnoColecao());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertFalse(sapatilha0.isPremium());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(";p7=Y3{bCX;5)J-OY", sapatilha0.getMarca());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals(0, int0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      int int0 = mala0.getN_utilizadores();
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.isPremium());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), int0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt0.getDisponivel();
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(boolean0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = Artigo.criaCodigo();
      assertEquals("A1", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Double double0 = new Double(1.0);
      assertEquals(1.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Mala mala0 = new Mala("o'c9", "o'c9", double0, false, (-2021575780), (-888), long0, long0, (-2021575780), "s{L8F\"LF", 3751, false, 0L);
      assertEquals(3751, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("o'c9", mala0.getDescricao());
      assertEquals((-2021575780), mala0.getEstado_uso());
      assertEquals("s{L8F\"LF", mala0.getMaterial());
      assertEquals("o'c9", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2021575780), mala0.getDimensao());
      assertEquals((-888), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      double double1 = mala0.getPreco_base();
      assertEquals(3751, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals("o'c9", mala0.getDescricao());
      assertEquals((-2021575780), mala0.getEstado_uso());
      assertEquals("s{L8F\"LF", mala0.getMaterial());
      assertEquals("o'c9", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-2021575780), mala0.getDimensao());
      assertEquals((-888), mala0.getN_utilizadores());
      assertFalse(mala0.getNovo());
      assertTrue(mala0.getDisponivel());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(1.0, mala0.getPreco_base(), 0.01);
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.isPremium());
      assertEquals(1.0, double1, 0.01);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Double double0 = new Double((-1562.5508));
      assertEquals((-1562.5508), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("A2", "A2", double0, false, (-329), (-329), long0, long0, (-329), true, "[+&_}C^bg`", (-329), true, (-2318.09369154));
      assertEquals((-2318.09369154), sapatilha0.getDesconto(), 0.01);
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-329), sapatilha0.getN_utilizadores());
      assertEquals((-1562.5508), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-329), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("[+&_}C^bg`", sapatilha0.getCor());
      assertEquals((-329), sapatilha0.getEstado_uso());
      assertEquals((-329), sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A2", sapatilha0.getMarca());
      assertEquals("A2", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      long long1 = sapatilha0.getIdVendedor();
      assertEquals((-2318.09369154), sapatilha0.getDesconto(), 0.01);
      assertEquals(0L, sapatilha0.getIdTransportadora());
      assertTrue(sapatilha0.isPremium());
      assertEquals(0L, sapatilha0.getIdVendedor());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals((-329), sapatilha0.getN_utilizadores());
      assertEquals((-1562.5508), sapatilha0.getPreco_base(), 0.01);
      assertEquals((-329), sapatilha0.getAnoColecao());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.isAtacadores());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("[+&_}C^bg`", sapatilha0.getCor());
      assertEquals((-329), sapatilha0.getEstado_uso());
      assertEquals((-329), sapatilha0.getTamanho());
      assertFalse(sapatilha0.getNovo());
      assertEquals("A2", sapatilha0.getMarca());
      assertEquals("A2", sapatilha0.getDescricao());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals(0L, long1);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double((-1.0));
      assertEquals((-1.0), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long((-1L));
      assertEquals((-1L), (long)long0);
      assertNotNull(long0);
      
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 10, 0, long0, long0, 10, false, "XL", 0, false, 0.5);
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-1.0), sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getTamanho());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("XL", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.5, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertNotNull(sapatilha0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = sapatilha0.getMarca();
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals((-1.0), sapatilha0.getPreco_base(), 0.01);
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(10, sapatilha0.getTamanho());
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(10, sapatilha0.getEstado_uso());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals(2L, sapatilha0.getContador());
      assertEquals("", sapatilha0.getDescricao());
      assertFalse(sapatilha0.isPremium());
      assertEquals("XL", sapatilha0.getCor());
      assertTrue(sapatilha0.getDisponivel());
      assertFalse(sapatilha0.getNovo());
      assertEquals(0.5, sapatilha0.getDesconto(), 0.01);
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Mala mala0 = new Mala();
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Double double0 = new Double(2L);
      assertEquals(2.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Sapatilha sapatilha0 = new Sapatilha("m4Q4n0F&A;9?tqp", "A", double0, true, 0, 0, (Long) 3L, (Long) mala0.contador, 1797, false, "m4Q4n0F&A;9?tqp", 0, false, 0.0F);
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isPremium());
      assertEquals(1797, sapatilha0.getTamanho());
      assertEquals("m4Q4n0F&A;9?tqp", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getNovo());
      assertEquals(3L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("m4Q4n0F&A;9?tqp", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertNotNull(sapatilha0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      String string0 = sapatilha0.getCodigo_barras();
      assertFalse(mala0.getNovo());
      assertEquals(0, mala0.getDimensao());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getMaterial());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertFalse(mala0.isPremium());
      assertEquals(3L, mala0.getContador());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A2", sapatilha0.getCodigo_barras());
      assertEquals("A", sapatilha0.getCodigo());
      assertEquals(2.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, sapatilha0.getIdVendedor());
      assertFalse(sapatilha0.isPremium());
      assertEquals(1797, sapatilha0.getTamanho());
      assertEquals("m4Q4n0F&A;9?tqp", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getNovo());
      assertEquals(3L, sapatilha0.getContador());
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals("A", sapatilha0.getMarca());
      assertFalse(sapatilha0.isAtacadores());
      assertEquals("m4Q4n0F&A;9?tqp", sapatilha0.getCor());
      assertEquals(3L, sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getDesconto(), 0.01);
      assertEquals(0, sapatilha0.getAnoColecao());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("A2", string0);
      assertNotNull(string0);
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double((-1978.3));
      assertEquals((-1978.3), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("A1", "A1", double0, true, 259, 259, long0, long0, 259, "A1", 683, true, 571.0F);
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(259, mala0.getDimensao());
      assertEquals("A1", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals("A1", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      long long1 = mala0.getIdTransportadora();
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
      assertEquals(259, mala0.getDimensao());
      assertEquals("A1", mala0.getMaterial());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getNovo());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals("A1", mala0.getMarca());
      assertEquals("A", mala0.getCodigo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0L, long1);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double((-1978.3));
      assertEquals((-1978.3), (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(0L);
      assertEquals(0L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("A1", "A1", double0, true, 259, 259, long0, long0, 259, "A1", 683, true, 571.0F);
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A1", mala0.getMarca());
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals(259, mala0.getDimensao());
      assertEquals("A1", mala0.getDescricao());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getMaterial());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.getNovo();
      assertEquals("A", mala0.getCodigo());
      assertTrue(mala0.isPremium());
      assertEquals(0L, mala0.getIdTransportadora());
      assertEquals(683, mala0.getAno_colecao());
      assertEquals(571.0F, mala0.getValorizacao(), 0.01F);
      assertTrue(mala0.getDisponivel());
      assertTrue(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(259, mala0.getN_utilizadores());
      assertEquals(0L, mala0.getIdVendedor());
      assertEquals("A1", mala0.getMarca());
      assertEquals((-1978.3), mala0.getPreco_base(), 0.01);
      assertEquals(259, mala0.getDimensao());
      assertEquals("A1", mala0.getDescricao());
      assertEquals(259, mala0.getEstado_uso());
      assertEquals(2L, mala0.getContador());
      assertEquals("A1", mala0.getMaterial());
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      String string0 = mala0.getDescricao();
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("A", mala0.getCodigo());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals("", mala0.getMaterial());
      assertEquals(0, mala0.getDimensao());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertFalse(mala0.getNovo());
      assertFalse(mala0.isPremium());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, mala0.getContador());
      assertFalse(mala0.getDisponivel());
      assertEquals(0, mala0.getAno_colecao());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", string0);
      assertNotNull(string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt1.setTransportadora((-724L));
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-724L), tshirt1.getIdTransportadora());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(2L, tshirt0.getContador());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("A", tshirt0.getCodigo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals((-724L), tshirt1.getIdTransportadora());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getTamanho());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = tshirt0.clone();
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals(2L, tshirt1.getContador());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt1.setVendedor(0L);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(0L, tshirt1.getIdVendedor());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals(2L, tshirt1.getContador());
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertFalse(tshirt0.getDisponivel());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertNull(tshirt0.getPadrao());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertFalse(tshirt1.getNovo());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals(0L, tshirt1.getIdVendedor());
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertFalse(tshirt1.getDisponivel());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertNull(tshirt1.getTamanho());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertEquals(2L, tshirt1.getContador());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tshirt tshirt1 = new Tshirt(tshirt0);
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt1.getTamanho());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertNotNull(tshirt1);
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      tshirt0.setN_utilizadores((-1717986917));
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1717986917), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNotSame(tshirt0, tshirt1);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = tshirt1.equals(tshirt0);
      assertNull(tshirt0.getTamanho());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("A", tshirt0.getCodigo());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertFalse(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals((-1717986917), tshirt0.getN_utilizadores());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertNull(tshirt1.getTamanho());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(0.0, tshirt1.getPreco_base(), 0.01);
      assertEquals("A1", tshirt1.getCodigo_barras());
      assertEquals((-1L), tshirt1.getIdTransportadora());
      assertEquals((-1), tshirt1.getEstado_uso());
      assertNull(tshirt1.getPadrao());
      assertEquals((-1L), tshirt1.getIdVendedor());
      assertEquals("Artigo invalido", tshirt1.getDescricao());
      assertFalse(tshirt1.getDisponivel());
      assertEquals((-1), tshirt1.getN_utilizadores());
      assertEquals("Artigo invalido", tshirt1.getMarca());
      assertFalse(tshirt1.getNovo());
      assertEquals(2L, tshirt1.getContador());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getDisponivel());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertFalse(mala1.getNovo());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertNotNull(mala1);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setNovo(true);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getDisponivel());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala1.equals(mala0);
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals("", mala0.getMaterial());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0, mala0.getDimensao());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(0, mala0.getAno_colecao());
      assertFalse(mala0.isPremium());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
      assertEquals(0.0F, mala0.getValorizacao(), 0.01F);
      assertEquals(2L, mala0.getContador());
      assertEquals("Artigo invalido", mala1.getDescricao());
      assertEquals(0, mala1.getAno_colecao());
      assertEquals(0.0F, mala1.getValorizacao(), 0.01F);
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getDisponivel());
      assertEquals("A", mala1.getCodigo());
      assertEquals("", mala1.getMaterial());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertFalse(mala1.isPremium());
      assertTrue(mala1.getNovo());
      assertEquals((-1), mala1.getN_utilizadores());
      assertEquals((-1L), mala1.getIdVendedor());
      assertEquals(2L, mala1.getContador());
      assertEquals("Artigo invalido", mala1.getMarca());
      assertEquals((-1L), mala1.getIdTransportadora());
      assertEquals(0, mala1.getDimensao());
      assertEquals((-1), mala1.getEstado_uso());
      assertFalse(boolean0);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Double double0 = new Double(0.0);
      assertEquals(0.0, (double)double0, 0.01);
      assertNotNull(double0);
      
      Long long0 = new Long(1L);
      assertEquals(1L, (long)long0);
      assertNotNull(long0);
      
      Mala mala0 = new Mala("!Li1Gb#BAzUW~<2'!3", "9k5yh'9f'l8~wIk", double0, false, 10, 2147483645, long0, long0, 2147483645, "!Li1Gb#BAzUW~<2'!3", 2147483645, true, (-1L));
      assertTrue(mala0.getDisponivel());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals(1L, mala0.getIdVendedor());
      assertNotNull(mala0);
      assertEquals(2L, Artigo.contador);
      
      Mala mala1 = new Mala(mala0);
      assertTrue(mala0.getDisponivel());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(2147483645, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getNovo());
      assertEquals(2147483645, mala1.getDimensao());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals("9k5yh'9f'l8~wIk", mala1.getMarca());
      assertEquals(2147483645, mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getMaterial());
      assertEquals(1L, mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals(2L, mala1.getContador());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals(1L, mala1.getIdVendedor());
      assertNotNull(mala1);
      assertTrue(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      mala1.setMarca("Rz9^E/frWR^u&%af");
      assertTrue(mala0.getDisponivel());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(2147483645, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getNovo());
      assertEquals(2147483645, mala1.getDimensao());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(2147483645, mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getMaterial());
      assertEquals(1L, mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Rz9^E/frWR^u&%af", mala1.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals(1L, mala1.getIdVendedor());
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
      
      boolean boolean0 = mala0.equals(mala1);
      assertTrue(mala0.getDisponivel());
      assertEquals("9k5yh'9f'l8~wIk", mala0.getMarca());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(2147483645, mala0.getAno_colecao());
      assertEquals((-1.0F), mala0.getValorizacao(), 0.01F);
      assertFalse(mala0.getNovo());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getDescricao());
      assertEquals(2147483645, mala0.getDimensao());
      assertEquals(2147483645, mala0.getN_utilizadores());
      assertEquals(1L, mala0.getIdTransportadora());
      assertTrue(mala0.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala0.getMaterial());
      assertEquals(2L, mala0.getContador());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("A", mala0.getCodigo());
      assertEquals(10, mala0.getEstado_uso());
      assertEquals(1L, mala0.getIdVendedor());
      assertEquals(2147483645, mala1.getAno_colecao());
      assertEquals("A1", mala1.getCodigo_barras());
      assertFalse(mala1.getNovo());
      assertEquals(2147483645, mala1.getDimensao());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getDescricao());
      assertTrue(mala1.getDisponivel());
      assertEquals(2147483645, mala1.getN_utilizadores());
      assertTrue(mala1.isPremium());
      assertEquals("!Li1Gb#BAzUW~<2'!3", mala1.getMaterial());
      assertEquals(1L, mala1.getIdTransportadora());
      assertEquals(0.0, mala1.getPreco_base(), 0.01);
      assertEquals("Rz9^E/frWR^u&%af", mala1.getMarca());
      assertEquals(2L, mala1.getContador());
      assertEquals((-1.0F), mala1.getValorizacao(), 0.01F);
      assertEquals("A", mala1.getCodigo());
      assertEquals(10, mala1.getEstado_uso());
      assertEquals(1L, mala1.getIdVendedor());
      assertFalse(boolean0);
      assertNotSame(mala0, mala1);
      assertNotSame(mala1, mala0);
      assertFalse(mala0.equals((Object)mala1));
      assertFalse(mala1.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(2L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertNotNull(tshirt0);
      assertEquals(2L, Artigo.contador);
      
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt1 = new Tshirt("A", "A", 3L, false, (-2080), 4, (Long) 3L, (Long) tshirt0.contador, tamanho0, padrao0);
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(3L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt1.getPadrao());
      assertTrue(tshirt1.getDisponivel());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertEquals(Tamanho.L, tshirt1.getTamanho());
      assertEquals(3L, tshirt1.getIdTransportadora());
      assertEquals(3L, tshirt1.getContador());
      assertEquals("A", tshirt1.getDescricao());
      assertEquals(3.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-2080), tshirt1.getEstado_uso());
      assertEquals(4, tshirt1.getN_utilizadores());
      assertEquals("A", tshirt1.getMarca());
      assertFalse(tshirt1.getNovo());
      assertNotNull(tshirt1);
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
      
      boolean boolean0 = tshirt0.equals(tshirt1);
      assertEquals("A", tshirt0.getCodigo());
      assertFalse(tshirt0.getDisponivel());
      assertNull(tshirt0.getPadrao());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals(3L, tshirt0.getContador());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      assertFalse(tshirt0.getNovo());
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertNull(tshirt0.getTamanho());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(Padrao.liso, tshirt1.getPadrao());
      assertTrue(tshirt1.getDisponivel());
      assertEquals("A2", tshirt1.getCodigo_barras());
      assertEquals("A", tshirt1.getCodigo());
      assertEquals(2L, tshirt1.getIdVendedor());
      assertEquals(Tamanho.L, tshirt1.getTamanho());
      assertEquals(3L, tshirt1.getIdTransportadora());
      assertEquals(3L, tshirt1.getContador());
      assertEquals("A", tshirt1.getDescricao());
      assertEquals(3.0, tshirt1.getPreco_base(), 0.01);
      assertEquals((-2080), tshirt1.getEstado_uso());
      assertEquals(4, tshirt1.getN_utilizadores());
      assertEquals("A", tshirt1.getMarca());
      assertFalse(tshirt1.getNovo());
      assertFalse(boolean0);
      assertNotSame(tshirt0, tshirt1);
      assertNotSame(tshirt1, tshirt0);
      assertFalse(tshirt0.equals((Object)tshirt1));
      assertFalse(tshirt1.equals((Object)tshirt0));
      assertEquals(3L, Artigo.contador);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = tshirt0.clone();
      // Undeclared exception!
      try { 
        tshirt0.equals(tshirt1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setDisponivel(false);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getDisponivel());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      String string0 = sapatilha0.mostrar(localDate0);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertEquals("Sapatilhas:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Tamanho: 0 Atacadores: false Cor:  Data da Cole\u00E7\u00E3o: 0 Premium: false Desconto: 0.0} Pre\u00E7o atual: 0.01\u20AC \n", string0);
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String string0 = Artigo.getCodigo();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      long long0 = Artigo.getContador();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setDescricao("#aE[E");
      assertEquals("#aE[E", sapatilha0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      sapatilha0.setCodigo_barras("#aE[E");
      assertEquals("#aE[E", sapatilha0.getCodigo_barras());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = tshirt0.clone();
      tshirt1.setEstado_uso(291);
      tshirt0.equals(tshirt1);
      assertEquals(291, tshirt1.getEstado_uso());
      assertEquals((-1), tshirt0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Mala mala0 = new Mala();
      Period period0 = Period.ofMonths(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      mala0.setData_venda(localDate0);
      String string0 = mala0.toString();
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 Data de venda: 2014-02-14 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0}", string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Artigo.setCodigo("A");
  }
}
