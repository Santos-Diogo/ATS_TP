/*
 * This file was automatically generated by EvoSuite
 * Mon May 27 16:34:26 GMT 2024
 */

package projeto;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import projeto.Artigo;
import projeto.Encomenda;
import projeto.GestorEncomendas;
import projeto.Gestor_Artigos;
import projeto.Gestor_Transportadoras;
import projeto.Gestor_Utilizadores;
import projeto.Mala;
import projeto.Menu;
import projeto.Padrao;
import projeto.Tamanho;
import projeto.Transportadora;
import projeto.Utilizador;
import projeto.Vintage;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vintage_ESTest extends Vintage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderMala(1443L, localDate0, "dados.ser", "A", 0.0, false, 2393, 7, 2062L, 2449, (String) null, (-2785), false, (-2785));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.now();
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.liso;
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderTshit(2927L, localDate0, "C^=y", ",xc.ZrO&@1", 2927L, true, 0, (-253), (-335L), tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Mala mala0 = new Mala();
      LocalDate localDate0 = mala0.getData_venda();
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha((-2L), localDate0, " vendeu ", "\"rZ:Z3X@e", 3L, true, (-1478), 12, (Long) mala0.contador, 123456L, 2332, true, "", (-380), true, 2129.5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.maiorVendedor((-546), (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.compradorMaior((-1399), (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        vintage0.criaMala("", "", (-1149.0), true, (-2490), (-2490), (-2490), 0, "", 1261, boolean0, (-2490));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean(false);
      // Undeclared exception!
      try { 
        vintage0.criaMala(";IKa7IK_7QoM+R", ";IKa7IK_7QoM+R", (-2735.986117), false, 0, (-6343), 1L, 0, "`l,4L1Byac1u`4", 0, boolean0, 0.0F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Long long0 = new Long(9);
      // Undeclared exception!
      try { 
        vintage0.criaSapatilha("", "", (-1429.90249), false, 0, 9, long0, 9, false, "Moda casual", (-2617), false, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador("N\u00E3o h\u00E1 vendedores", "N\u00E3o h\u00E1 vendedores", "N\u00E3o h\u00E1 vendedores", (-641L), "aVWKJ)]L");
      assertEquals(1L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      Long long0 = new Long((-1L));
      vintage0.criaSapatilha("", ")|VCdT7@:r", 1.0, false, 8, 8, long0, (-2748), true, "", 1414, false, 934.5378907918);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " vendeu ");
      Vintage vintage0 = Vintage.load();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      String string0 = vintage0.imprimeFormulasNormais();
      assertEquals("1) (ValorBase * MargemLucroTransportadora * (1 + Imposto)) * 0,9\n2) (ValorBase * (1 + MargemLucroTransportadora + Imposto)) * 0,7", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.imprimeFaturasCompras();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      long long0 = vintage0.getUtilizador();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 651);
      long long0 = vintage0.getUtilizador();
      assertEquals(651L, long0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage vintage1 = new Vintage(vintage0);
      vintage1.getGestor_Trasportadoras();
      assertEquals((-1L), vintage1.getUtilizador());
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, 0);
      Vintage vintage1 = new Vintage(vintage0);
      vintage1.getGestor_Encomendas();
      assertEquals(0L, vintage1.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage vintage1 = new Vintage(vintage0);
      vintage1.getData();
      assertEquals((-1L), vintage1.getUtilizador());
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Tamanho tamanho0 = Tamanho.L;
      vintage0.povoamento();
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.criaTshirt("w2(u huJt55,R", "w2(u huJt55,R", 95.60673396, true, 4, 0, 4, tamanho0, padrao0);
      String string0 = vintage0.filtraTshirtsTamanho(tamanho0);
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A13 Descri\u00E7\u00E3o: w2(u huJt55,R Marca: w2(u huJt55,R Pre\u00E7o base: 95.60673396 Novo: true Estado de uso: 4 N\u00FAmero de utilizadores: 0 Disponivel: true Id da transportadora: 4 Id do vendedor: 2 } Tamanho: L Padr\u00E3o: palmeiras}\n", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Tamanho tamanho0 = Tamanho.L;
      vintage0.povoamento();
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.criaTshirt("w2(u huJt55,R", "w2(u huJt55,R", 0L, true, 4, 0, 4, tamanho0, padrao0);
      String string0 = vintage0.filtraTshirtsPadrao(padrao0);
      assertEquals("T-shirt:: {Artigo:: { C\u00F3digo de barras: A13 Descri\u00E7\u00E3o: w2(u huJt55,R Marca: w2(u huJt55,R Pre\u00E7o base: 0.0 Novo: true Estado de uso: 4 N\u00FAmero de utilizadores: 0 Disponivel: true Id da transportadora: 4 Id do vendedor: 2 } Tamanho: L Padr\u00E3o: palmeiras}\n", string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.faturas_venda();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.encomendasRealizadas();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, (Menu) null, 45);
      // Undeclared exception!
      try { 
        vintage0.todosArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.removerTodosArtigosCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.povoamento();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.meusArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.imprimeTransportadorasNormais();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.imprimeTransportadoras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.imprimeFormulas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      Long long0 = new Long((-3279L));
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomendaPorId(long0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomenda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.existe_transpotadoraPremium(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.existeTranspotadora(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.existeArtigoId("37%4!v=HWns~*~&gD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.encomendasDevolver((-2L));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o exite nenhuma encomenda com o ID -2
         //
         verifyException("projeto.GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.encomendasDevolver((-3099L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.TransportadoraMaiorVolume();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Vintage vintage0 = null;
      try {
        vintage0 = new Vintage((Vintage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicinonarTransportadora("IF8bOn", (-1.0), 0.01, (-3584.5533773), (-2648.4), (-5429.1751106506), true, 0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      HashMap<Long, Encomenda> hashMap3 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap3);
      HashMap<Long, Transportadora> hashMap4 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap4);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-2714));
      long long0 = vintage0.getUtilizador();
      assertEquals((-2714L), long0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Vintage vintage0 = Vintage.carregarEstado();
      assertNull(vintage0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null, (-1430));
      try { 
        vintage0.artigoDisponivel("Cinza");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Cinza n\u00E3o existe!
         //
         verifyException("projeto.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.now();
      vintage0.setData(localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      HashMap<Long, Transportadora> hashMap1 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap1);
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null, 0);
      try { 
        vintage0.artigoIndisponivel("Cz07nEP");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Cz07nEP n\u00E3o existe!
         //
         verifyException("projeto.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Utilizadores();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Artigos();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      vintage0.maiorVendedor(0, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Period period0 = Period.of((-2100), (-2100), 949);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      vintage0.maiorVendedor(949, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.vendedorMaior(1114, (LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Period period0 = Period.of((-2100), (-2100), 949);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      vintage0.povoamento();
      String string0 = vintage0.maiorComprador(949, localDate0, localDate0);
      assertEquals("admin comprou 0 artigos\njoao comprou 0 artigos\n", string0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Period period0 = Period.of((-2100), (-2100), 949);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      vintage0.maiorComprador(949, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2307L);
      vintage0.compradorMaior(0, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.now();
      String string0 = vintage0.vendedorFacturouTempo(localDate0, localDate0);
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.vendedorFacturou();
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      boolean boolean0 = vintage0.verificaPassword("", (String) null);
      assertFalse(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraAMarcaSapatilhas("c@bi%yj;5h");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.salvarEstado();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraMalasColecao(1);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      boolean boolean0 = vintage0.existeTranspotadora(2L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existeArtigoId("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existeEmail("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null, (-1430));
      vintage0.existeIdUtilizador((-1430));
      assertEquals((-1430L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.encomendasRealizadas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraSapatilhasNovo((Boolean) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      String string0 = vintage0.VintageFaturou();
      assertEquals((-1L), vintage0.getUtilizador());
      assertEquals("A Vintage faturou 0.0\u20AC\n", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean(false);
      vintage0.filtraMalasNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      try { 
        vintage0.removerArtigosCarrinho("?],#9t~aktW}iTh~");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo ?],#9t~aktW}iTh~ n\u00E3o existe!
         //
         verifyException("projeto.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Encomendas((GestorEncomendas) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadorasNormais();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.alteraFormula(1L, 6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existe_transpotadoraNormal((-1L));
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      HashMap<Long, Encomenda> hashMap3 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap3);
      HashMap<Long, Transportadora> hashMap4 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap4);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-2714));
      vintage0.filtraMalasDimensao((-2714));
      assertEquals((-2714L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraSapatilhasTamanho(9);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.TransportadoraMaiorVolume();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraSapatilhasCor("}gy=5me$");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      HashMap<Long, Encomenda> hashMap2 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap2);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 0);
      try { 
        vintage0.adicionarArtigoCarrinho("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo  n\u00E3o existe!
         //
         verifyException("projeto.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      boolean boolean0 = vintage0.existe_transpotadoraPremium(2L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.faturas_compras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      vintage0.setGestor_Artigos(gestor_Artigos0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.existe_transpotadoraNormal((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeFormulas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaCompra(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.povoamento();
      String string0 = vintage0.imprimeCarrinho();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaVenda(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.encomendasEmitidasVendedor(2L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadoras();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Padrao padrao0 = Padrao.palmeiras;
      vintage0.filtraTshirtsPadrao(padrao0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasCompras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasVendas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, (-1146));
      // Undeclared exception!
      try { 
        vintage0.imprimeFormulasNormais();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.encomendasDevolvidas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getGestor_Trasportadoras();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraTshirtsMarca(" vendeu ");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = Boolean.FALSE;
      vintage0.filtraTshirtsNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprimeCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      HashMap<Long, Encomenda> hashMap3 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap3);
      HashMap<Long, Transportadora> hashMap4 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap4);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, (-2714));
      vintage0.filtraMalasMaterial("5Bau@nY/'('i");
      assertEquals((-2714L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, hashMap1, hashMap2);
      vintage0.setGestor_Utilizadores(gestor_Utilizadores0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.artigoID("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadoraspremium();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getGestor_Encomendas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(2307L);
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderMala(2307L, localDate0, "", "", 2307L, false, (-1206), 2393, (-1799L), 45, "", 0, true, 2393);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(6);
      Clock clock0 = MockClock.tickSeconds(zoneOffset0);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      try { 
        vintage0.adicionarArtigoCarrinhoPorID("", (-84L), localDate0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo  n\u00E3o existe!
         //
         verifyException("projeto.Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setUtilizador(0);
      assertEquals(0L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Boolean boolean0 = new Boolean(";K2Qi~l>q5&t-Zx*,UO");
      // Undeclared exception!
      try { 
        vintage0.criaMala((String) null, "e", 2576.19, true, 1046, 1046, 1046, 1046, "e", 1046, boolean0, 1046);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Tamanho tamanho0 = Tamanho.M;
      vintage0.filtraTshirtsTamanho(tamanho0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = vintage0.getData();
      Long long0 = new Long(2022);
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha((-1878L), localDate0, "U.WFpX", "U.WFpX", 0.0, true, 12, 2022, long0, 2022, 2022, true, "(Asg'7>l", 12, false, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      // Undeclared exception!
      try { 
        vintage0.criaTshirt("N\u00E3o h\u00E1 vendedores", "hP}/%#xc~)@7Y", 0.0, false, 0, 0, 0, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Vintage vintage1 = new Vintage(vintage0);
      // Undeclared exception!
      try { 
        vintage1.adicinonarTransportadora("e(GoV>$7", 0.0, (-477.6917), 139.99, (-477.6917), 249.99, false, 7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0);
      vintage0.avancarTempo(localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.faturas_venda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      assertNotNull(vintage0);
      
      vintage0.filtraMalasMarca("BjDA<");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.login_utlizador("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("projeto.Gestor_Utilizadores", e);
      }
  }
}
